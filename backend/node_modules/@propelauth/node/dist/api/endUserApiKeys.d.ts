import { ApiKeyFull, ApiKeyNew, ApiKeyResultPage, ApiKeyValidation } from "../user";
export declare function fetchApiKey(authUrl: URL, integrationApiKey: string, apiKeyId: string): Promise<ApiKeyFull>;
export declare type ApiKeysQueryRequest = {
    orgId?: string;
    userId?: string;
    userEmail?: string;
    pageSize?: number;
    pageNumber?: number;
};
export declare function fetchCurrentApiKeys(authUrl: URL, integrationApiKey: string, apiKeyQuery: ApiKeysQueryRequest): Promise<ApiKeyResultPage>;
export declare function fetchArchivedApiKeys(authUrl: URL, integrationApiKey: string, apiKeyQuery: ApiKeysQueryRequest): Promise<ApiKeyResultPage>;
export declare type ApiKeysCreateRequest = {
    orgId?: string;
    userId?: string;
    expiresAtSeconds?: number;
    metadata?: object;
};
export declare function createApiKey(authUrl: URL, integrationApiKey: string, apiKeyCreate: ApiKeysCreateRequest): Promise<ApiKeyNew>;
export declare function validateApiKey(authUrl: URL, integrationApiKey: string, apiKeyToken: string): Promise<ApiKeyValidation>;
export declare type ApiKeyUpdateRequest = {
    expiresAtSeconds?: number;
    metadata?: string;
};
export declare function updateApiKey(authUrl: URL, integrationApiKey: string, apiKeyId: string, apiKeyUpdate: ApiKeyUpdateRequest): Promise<boolean>;
export declare function deleteApiKey(authUrl: URL, integrationApiKey: string, apiKeyId: string): Promise<boolean>;
