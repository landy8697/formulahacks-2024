import { CreatedOrg, Org } from "../user";
export declare function fetchOrg(authUrl: URL, integrationApiKey: string, orgId: string): Promise<Org | null>;
export declare type OrgQuery = {
    pageSize?: number;
    pageNumber?: number;
    orderBy?: "CREATED_AT_ASC" | "CREATED_AT_DESC" | "NAME";
};
export declare type OrgQueryResponse = {
    orgs: Org[];
    totalOrgs: number;
    currentPage: number;
    pageSize: number;
    hasMoreResults: boolean;
};
export declare function fetchOrgByQuery(authUrl: URL, integrationApiKey: string, query: OrgQuery): Promise<OrgQueryResponse>;
export declare type CreateOrgRequest = {
    name: string;
    domain?: string;
    enableAutoJoiningByDomain?: boolean;
    membersMustHaveMatchingDomain?: boolean;
    maxUsers?: number;
};
export declare function createOrg(authUrl: URL, integrationApiKey: string, createOrgRequest: CreateOrgRequest): Promise<CreatedOrg>;
export declare type AddUserToOrgRequest = {
    userId: string;
    orgId: string;
    role: string;
};
export declare function addUserToOrg(authUrl: URL, integrationApiKey: string, addUserToOrgRequest: AddUserToOrgRequest): Promise<boolean>;
export declare type ChangeUserRoleInOrgRequest = {
    userId: string;
    orgId: string;
    role: string;
};
export declare function changeUserRoleInOrg(authUrl: URL, integrationApiKey: string, changeUserRoleInOrgRequest: ChangeUserRoleInOrgRequest): Promise<boolean>;
export declare type RemoveUserFromOrgRequest = {
    userId: string;
    orgId: string;
};
export declare function removeUserFromOrg(authUrl: URL, integrationApiKey: string, removeUserFromOrgRequest: RemoveUserFromOrgRequest): Promise<boolean>;
export declare function allowOrgToSetupSamlConnection(authUrl: URL, integrationApiKey: string, orgId: string): Promise<boolean>;
export declare function disallowOrgToSetupSamlConnection(authUrl: URL, integrationApiKey: string, orgId: string): Promise<boolean>;
export declare type UpdateOrgRequest = {
    orgId: string;
    name?: string;
    canSetupSaml?: boolean;
    maxUsers?: number;
    metadata?: {
        [key: string]: any;
    };
    canJoinOnEmailDomainMatch?: boolean;
    membersMustHaveEmailDomainMatch?: boolean;
    domain?: string;
};
export declare function updateOrg(authUrl: URL, integrationApiKey: string, updateOrgRequest: UpdateOrgRequest): Promise<boolean>;
export declare function deleteOrg(authUrl: URL, integrationApiKey: string, orgId: string): Promise<boolean>;
