{"version":3,"file":"index.es.js","sources":["../node_modules/tslib/tslib.es6.js","../node_modules/jose/dist/node/esm/lib/buffer_utils.js","../node_modules/jose/dist/node/esm/runtime/base64url.js","../node_modules/jose/dist/node/esm/util/errors.js","../node_modules/jose/dist/node/esm/runtime/is_key_object.js","../node_modules/jose/dist/node/esm/runtime/webcrypto.js","../node_modules/jose/dist/node/esm/lib/crypto_key.js","../node_modules/jose/dist/node/esm/lib/invalid_key_input.js","../node_modules/jose/dist/node/esm/runtime/is_key_like.js","../node_modules/jose/dist/node/esm/lib/is_disjoint.js","../node_modules/jose/dist/node/esm/lib/is_object.js","../node_modules/jose/dist/node/esm/runtime/get_named_curve.js","../node_modules/jose/dist/node/esm/runtime/check_key_length.js","../node_modules/jose/dist/node/esm/runtime/asn1.js","../node_modules/jose/dist/node/esm/key/import.js","../node_modules/jose/dist/node/esm/lib/check_key_type.js","../node_modules/jose/dist/node/esm/lib/validate_crit.js","../node_modules/jose/dist/node/esm/lib/validate_algorithms.js","../node_modules/jose/dist/node/esm/runtime/dsa_digest.js","../node_modules/jose/dist/node/esm/runtime/node_key.js","../node_modules/jose/dist/node/esm/runtime/hmac_digest.js","../node_modules/jose/dist/node/esm/runtime/get_sign_verify_key.js","../node_modules/jose/dist/node/esm/runtime/sign.js","../node_modules/jose/dist/node/esm/runtime/verify.js","../node_modules/jose/dist/node/esm/jws/flattened/verify.js","../node_modules/jose/dist/node/esm/jws/compact/verify.js","../node_modules/jose/dist/node/esm/lib/epoch.js","../node_modules/jose/dist/node/esm/lib/secs.js","../node_modules/jose/dist/node/esm/lib/jwt_claims_set.js","../node_modules/jose/dist/node/esm/jwt/verify.js","../src/exceptions.ts","../src/http.ts","../src/loginMethod.ts","../src/user.ts","../src/utils.ts","../src/api/accessToken.ts","../src/api/endUserApiKeys.ts","../src/api/magicLink.ts","../src/api/migrateUser.ts","../src/api/org.ts","../src/api/tokenVerificationMetadata.ts","../src/api/user.ts","../src/validators.ts","../src/auth.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import digest from '../runtime/digest.js';\nexport const encoder = new TextEncoder();\nexport const decoder = new TextDecoder();\nconst MAX_INT32 = 2 ** 32;\nexport function concat(...buffers) {\n    const size = buffers.reduce((acc, { length }) => acc + length, 0);\n    const buf = new Uint8Array(size);\n    let i = 0;\n    buffers.forEach((buffer) => {\n        buf.set(buffer, i);\n        i += buffer.length;\n    });\n    return buf;\n}\nexport function p2s(alg, p2sInput) {\n    return concat(encoder.encode(alg), new Uint8Array([0]), p2sInput);\n}\nfunction writeUInt32BE(buf, value, offset) {\n    if (value < 0 || value >= MAX_INT32) {\n        throw new RangeError(`value must be >= 0 and <= ${MAX_INT32 - 1}. Received ${value}`);\n    }\n    buf.set([value >>> 24, value >>> 16, value >>> 8, value & 0xff], offset);\n}\nexport function uint64be(value) {\n    const high = Math.floor(value / MAX_INT32);\n    const low = value % MAX_INT32;\n    const buf = new Uint8Array(8);\n    writeUInt32BE(buf, high, 0);\n    writeUInt32BE(buf, low, 4);\n    return buf;\n}\nexport function uint32be(value) {\n    const buf = new Uint8Array(4);\n    writeUInt32BE(buf, value);\n    return buf;\n}\nexport function lengthAndInput(input) {\n    return concat(uint32be(input.length), input);\n}\nexport async function concatKdf(secret, bits, value) {\n    const iterations = Math.ceil((bits >> 3) / 32);\n    const res = new Uint8Array(iterations * 32);\n    for (let iter = 0; iter < iterations; iter++) {\n        const buf = new Uint8Array(4 + secret.length + value.length);\n        buf.set(uint32be(iter + 1));\n        buf.set(secret, 4);\n        buf.set(value, 4 + secret.length);\n        res.set(await digest('sha256', buf), iter * 32);\n    }\n    return res.slice(0, bits >> 3);\n}\n","import { Buffer } from 'node:buffer';\nimport { decoder } from '../lib/buffer_utils.js';\nfunction normalize(input) {\n    let encoded = input;\n    if (encoded instanceof Uint8Array) {\n        encoded = decoder.decode(encoded);\n    }\n    return encoded;\n}\nconst encode = (input) => Buffer.from(input).toString('base64url');\nexport const decodeBase64 = (input) => new Uint8Array(Buffer.from(input, 'base64'));\nexport const encodeBase64 = (input) => Buffer.from(input).toString('base64');\nexport { encode };\nexport const decode = (input) => new Uint8Array(Buffer.from(normalize(input), 'base64'));\n","export class JOSEError extends Error {\n    static get code() {\n        return 'ERR_JOSE_GENERIC';\n    }\n    code = 'ERR_JOSE_GENERIC';\n    constructor(message) {\n        super(message);\n        this.name = this.constructor.name;\n        Error.captureStackTrace?.(this, this.constructor);\n    }\n}\nexport class JWTClaimValidationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    }\n    code = 'ERR_JWT_CLAIM_VALIDATION_FAILED';\n    claim;\n    reason;\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JWTExpired extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_EXPIRED';\n    }\n    code = 'ERR_JWT_EXPIRED';\n    claim;\n    reason;\n    constructor(message, claim = 'unspecified', reason = 'unspecified') {\n        super(message);\n        this.claim = claim;\n        this.reason = reason;\n    }\n}\nexport class JOSEAlgNotAllowed extends JOSEError {\n    static get code() {\n        return 'ERR_JOSE_ALG_NOT_ALLOWED';\n    }\n    code = 'ERR_JOSE_ALG_NOT_ALLOWED';\n}\nexport class JOSENotSupported extends JOSEError {\n    static get code() {\n        return 'ERR_JOSE_NOT_SUPPORTED';\n    }\n    code = 'ERR_JOSE_NOT_SUPPORTED';\n}\nexport class JWEDecryptionFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWE_DECRYPTION_FAILED';\n    }\n    code = 'ERR_JWE_DECRYPTION_FAILED';\n    message = 'decryption operation failed';\n}\nexport class JWEInvalid extends JOSEError {\n    static get code() {\n        return 'ERR_JWE_INVALID';\n    }\n    code = 'ERR_JWE_INVALID';\n}\nexport class JWSInvalid extends JOSEError {\n    static get code() {\n        return 'ERR_JWS_INVALID';\n    }\n    code = 'ERR_JWS_INVALID';\n}\nexport class JWTInvalid extends JOSEError {\n    static get code() {\n        return 'ERR_JWT_INVALID';\n    }\n    code = 'ERR_JWT_INVALID';\n}\nexport class JWKInvalid extends JOSEError {\n    static get code() {\n        return 'ERR_JWK_INVALID';\n    }\n    code = 'ERR_JWK_INVALID';\n}\nexport class JWKSInvalid extends JOSEError {\n    static get code() {\n        return 'ERR_JWKS_INVALID';\n    }\n    code = 'ERR_JWKS_INVALID';\n}\nexport class JWKSNoMatchingKey extends JOSEError {\n    static get code() {\n        return 'ERR_JWKS_NO_MATCHING_KEY';\n    }\n    code = 'ERR_JWKS_NO_MATCHING_KEY';\n    message = 'no applicable key found in the JSON Web Key Set';\n}\nexport class JWKSMultipleMatchingKeys extends JOSEError {\n    [Symbol.asyncIterator];\n    static get code() {\n        return 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    }\n    code = 'ERR_JWKS_MULTIPLE_MATCHING_KEYS';\n    message = 'multiple matching keys found in the JSON Web Key Set';\n}\nexport class JWKSTimeout extends JOSEError {\n    static get code() {\n        return 'ERR_JWKS_TIMEOUT';\n    }\n    code = 'ERR_JWKS_TIMEOUT';\n    message = 'request timed out';\n}\nexport class JWSSignatureVerificationFailed extends JOSEError {\n    static get code() {\n        return 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    }\n    code = 'ERR_JWS_SIGNATURE_VERIFICATION_FAILED';\n    message = 'signature verification failed';\n}\n","import * as util from 'node:util';\nexport default (obj) => util.types.isKeyObject(obj);\n","import * as crypto from 'node:crypto';\nimport * as util from 'node:util';\nconst webcrypto = crypto.webcrypto;\nexport default webcrypto;\nexport const isCryptoKey = (key) => util.types.isCryptoKey(key);\n","function unusable(name, prop = 'algorithm.name') {\n    return new TypeError(`CryptoKey does not support this operation, its ${prop} must be ${name}`);\n}\nfunction isAlgorithm(algorithm, name) {\n    return algorithm.name === name;\n}\nfunction getHashLength(hash) {\n    return parseInt(hash.name.slice(4), 10);\n}\nfunction getNamedCurve(alg) {\n    switch (alg) {\n        case 'ES256':\n            return 'P-256';\n        case 'ES384':\n            return 'P-384';\n        case 'ES512':\n            return 'P-521';\n        default:\n            throw new Error('unreachable');\n    }\n}\nfunction checkUsage(key, usages) {\n    if (usages.length && !usages.some((expected) => key.usages.includes(expected))) {\n        let msg = 'CryptoKey does not support this operation, its usages must include ';\n        if (usages.length > 2) {\n            const last = usages.pop();\n            msg += `one of ${usages.join(', ')}, or ${last}.`;\n        }\n        else if (usages.length === 2) {\n            msg += `one of ${usages[0]} or ${usages[1]}.`;\n        }\n        else {\n            msg += `${usages[0]}.`;\n        }\n        throw new TypeError(msg);\n    }\n}\nexport function checkSigCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'HS256':\n        case 'HS384':\n        case 'HS512': {\n            if (!isAlgorithm(key.algorithm, 'HMAC'))\n                throw unusable('HMAC');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'RS256':\n        case 'RS384':\n        case 'RS512': {\n            if (!isAlgorithm(key.algorithm, 'RSASSA-PKCS1-v1_5'))\n                throw unusable('RSASSA-PKCS1-v1_5');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'PS256':\n        case 'PS384':\n        case 'PS512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-PSS'))\n                throw unusable('RSA-PSS');\n            const expected = parseInt(alg.slice(2), 10);\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        case 'EdDSA': {\n            if (key.algorithm.name !== 'Ed25519' && key.algorithm.name !== 'Ed448') {\n                throw unusable('Ed25519 or Ed448');\n            }\n            break;\n        }\n        case 'ES256':\n        case 'ES384':\n        case 'ES512': {\n            if (!isAlgorithm(key.algorithm, 'ECDSA'))\n                throw unusable('ECDSA');\n            const expected = getNamedCurve(alg);\n            const actual = key.algorithm.namedCurve;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.namedCurve');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\nexport function checkEncCryptoKey(key, alg, ...usages) {\n    switch (alg) {\n        case 'A128GCM':\n        case 'A192GCM':\n        case 'A256GCM': {\n            if (!isAlgorithm(key.algorithm, 'AES-GCM'))\n                throw unusable('AES-GCM');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'A128KW':\n        case 'A192KW':\n        case 'A256KW': {\n            if (!isAlgorithm(key.algorithm, 'AES-KW'))\n                throw unusable('AES-KW');\n            const expected = parseInt(alg.slice(1, 4), 10);\n            const actual = key.algorithm.length;\n            if (actual !== expected)\n                throw unusable(expected, 'algorithm.length');\n            break;\n        }\n        case 'ECDH': {\n            switch (key.algorithm.name) {\n                case 'ECDH':\n                case 'X25519':\n                case 'X448':\n                    break;\n                default:\n                    throw unusable('ECDH, X25519, or X448');\n            }\n            break;\n        }\n        case 'PBES2-HS256+A128KW':\n        case 'PBES2-HS384+A192KW':\n        case 'PBES2-HS512+A256KW':\n            if (!isAlgorithm(key.algorithm, 'PBKDF2'))\n                throw unusable('PBKDF2');\n            break;\n        case 'RSA-OAEP':\n        case 'RSA-OAEP-256':\n        case 'RSA-OAEP-384':\n        case 'RSA-OAEP-512': {\n            if (!isAlgorithm(key.algorithm, 'RSA-OAEP'))\n                throw unusable('RSA-OAEP');\n            const expected = parseInt(alg.slice(9), 10) || 1;\n            const actual = getHashLength(key.algorithm.hash);\n            if (actual !== expected)\n                throw unusable(`SHA-${expected}`, 'algorithm.hash');\n            break;\n        }\n        default:\n            throw new TypeError('CryptoKey does not support this operation');\n    }\n    checkUsage(key, usages);\n}\n","function message(msg, actual, ...types) {\n    if (types.length > 2) {\n        const last = types.pop();\n        msg += `one of type ${types.join(', ')}, or ${last}.`;\n    }\n    else if (types.length === 2) {\n        msg += `one of type ${types[0]} or ${types[1]}.`;\n    }\n    else {\n        msg += `of type ${types[0]}.`;\n    }\n    if (actual == null) {\n        msg += ` Received ${actual}`;\n    }\n    else if (typeof actual === 'function' && actual.name) {\n        msg += ` Received function ${actual.name}`;\n    }\n    else if (typeof actual === 'object' && actual != null) {\n        if (actual.constructor && actual.constructor.name) {\n            msg += ` Received an instance of ${actual.constructor.name}`;\n        }\n    }\n    return msg;\n}\nexport default (actual, ...types) => {\n    return message('Key must be ', actual, ...types);\n};\nexport function withAlg(alg, actual, ...types) {\n    return message(`Key for the ${alg} algorithm must be `, actual, ...types);\n}\n","import webcrypto, { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nexport default (key) => isKeyObject(key) || isCryptoKey(key);\nconst types = ['KeyObject'];\nif (globalThis.CryptoKey || webcrypto?.CryptoKey) {\n    types.push('CryptoKey');\n}\nexport { types };\n","const isDisjoint = (...headers) => {\n    const sources = headers.filter(Boolean);\n    if (sources.length === 0 || sources.length === 1) {\n        return true;\n    }\n    let acc;\n    for (const header of sources) {\n        const parameters = Object.keys(header);\n        if (!acc || acc.size === 0) {\n            acc = new Set(parameters);\n            continue;\n        }\n        for (const parameter of parameters) {\n            if (acc.has(parameter)) {\n                return false;\n            }\n            acc.add(parameter);\n        }\n    }\n    return true;\n};\nexport default isDisjoint;\n","function isObjectLike(value) {\n    return typeof value === 'object' && value !== null;\n}\nexport default function isObject(input) {\n    if (!isObjectLike(input) || Object.prototype.toString.call(input) !== '[object Object]') {\n        return false;\n    }\n    if (Object.getPrototypeOf(input) === null) {\n        return true;\n    }\n    let proto = input;\n    while (Object.getPrototypeOf(proto) !== null) {\n        proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(input) === proto;\n}\n","import { KeyObject } from 'node:crypto';\nimport { JOSENotSupported } from '../util/errors.js';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport const weakMap = new WeakMap();\nconst namedCurveToJOSE = (namedCurve) => {\n    switch (namedCurve) {\n        case 'prime256v1':\n            return 'P-256';\n        case 'secp384r1':\n            return 'P-384';\n        case 'secp521r1':\n            return 'P-521';\n        case 'secp256k1':\n            return 'secp256k1';\n        default:\n            throw new JOSENotSupported('Unsupported key curve for this operation');\n    }\n};\nconst getNamedCurve = (kee, raw) => {\n    let key;\n    if (isCryptoKey(kee)) {\n        key = KeyObject.from(kee);\n    }\n    else if (isKeyObject(kee)) {\n        key = kee;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(kee, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError('only \"private\" or \"public\" type keys can be used for this operation');\n    }\n    switch (key.asymmetricKeyType) {\n        case 'ed25519':\n        case 'ed448':\n            return `Ed${key.asymmetricKeyType.slice(2)}`;\n        case 'x25519':\n        case 'x448':\n            return `X${key.asymmetricKeyType.slice(1)}`;\n        case 'ec': {\n            let namedCurve = key.asymmetricKeyDetails.namedCurve;\n            if (raw) {\n                return namedCurve;\n            }\n            return namedCurveToJOSE(namedCurve);\n        }\n        default:\n            throw new TypeError('Invalid asymmetric key type for this operation');\n    }\n};\nexport default getNamedCurve;\n","export default (key, alg) => {\n    const { modulusLength } = key.asymmetricKeyDetails;\n    if (typeof modulusLength !== 'number' || modulusLength < 2048) {\n        throw new TypeError(`${alg} requires key modulusLength to be 2048 bits or larger`);\n    }\n};\n","import { createPrivateKey, createPublicKey, KeyObject } from 'node:crypto';\nimport { Buffer } from 'node:buffer';\nimport { isCryptoKey } from './webcrypto.js';\nimport isKeyObject from './is_key_object.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nconst genericExport = (keyType, keyFormat, key) => {\n    let keyObject;\n    if (isCryptoKey(key)) {\n        if (!key.extractable) {\n            throw new TypeError('CryptoKey is not extractable');\n        }\n        keyObject = KeyObject.from(key);\n    }\n    else if (isKeyObject(key)) {\n        keyObject = key;\n    }\n    else {\n        throw new TypeError(invalidKeyInput(key, ...types));\n    }\n    if (keyObject.type !== keyType) {\n        throw new TypeError(`key is not a ${keyType} key`);\n    }\n    return keyObject.export({ format: 'pem', type: keyFormat });\n};\nexport const toSPKI = (key) => {\n    return genericExport('public', 'spki', key);\n};\nexport const toPKCS8 = (key) => {\n    return genericExport('private', 'pkcs8', key);\n};\nexport const fromPKCS8 = (pem) => createPrivateKey({\n    key: Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PRIVATE KEY-----|\\s)/g, ''), 'base64'),\n    type: 'pkcs8',\n    format: 'der',\n});\nexport const fromSPKI = (pem) => createPublicKey({\n    key: Buffer.from(pem.replace(/(?:-----(?:BEGIN|END) PUBLIC KEY-----|\\s)/g, ''), 'base64'),\n    type: 'spki',\n    format: 'der',\n});\nexport const fromX509 = (pem) => createPublicKey({\n    key: pem,\n    type: 'spki',\n    format: 'pem',\n});\n","import { decode as decodeBase64URL } from '../runtime/base64url.js';\nimport { fromSPKI, fromPKCS8, fromX509 } from '../runtime/asn1.js';\nimport asKeyObject from '../runtime/jwk_to_key.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport isObject from '../lib/is_object.js';\nexport async function importSPKI(spki, alg, options) {\n    if (typeof spki !== 'string' || spki.indexOf('-----BEGIN PUBLIC KEY-----') !== 0) {\n        throw new TypeError('\"spki\" must be SPKI formatted string');\n    }\n    return fromSPKI(spki, alg, options);\n}\nexport async function importX509(x509, alg, options) {\n    if (typeof x509 !== 'string' || x509.indexOf('-----BEGIN CERTIFICATE-----') !== 0) {\n        throw new TypeError('\"x509\" must be X.509 formatted string');\n    }\n    return fromX509(x509, alg, options);\n}\nexport async function importPKCS8(pkcs8, alg, options) {\n    if (typeof pkcs8 !== 'string' || pkcs8.indexOf('-----BEGIN PRIVATE KEY-----') !== 0) {\n        throw new TypeError('\"pkcs8\" must be PKCS#8 formatted string');\n    }\n    return fromPKCS8(pkcs8, alg, options);\n}\nexport async function importJWK(jwk, alg) {\n    if (!isObject(jwk)) {\n        throw new TypeError('JWK must be an object');\n    }\n    alg ||= jwk.alg;\n    switch (jwk.kty) {\n        case 'oct':\n            if (typeof jwk.k !== 'string' || !jwk.k) {\n                throw new TypeError('missing \"k\" (Key Value) Parameter value');\n            }\n            return decodeBase64URL(jwk.k);\n        case 'RSA':\n            if (jwk.oth !== undefined) {\n                throw new JOSENotSupported('RSA JWK \"oth\" (Other Primes Info) Parameter value is not supported');\n            }\n        case 'EC':\n        case 'OKP':\n            return asKeyObject({ ...jwk, alg });\n        default:\n            throw new JOSENotSupported('Unsupported \"kty\" (Key Type) Parameter value');\n    }\n}\n","import { withAlg as invalidKeyInput } from './invalid_key_input.js';\nimport isKeyLike, { types } from '../runtime/is_key_like.js';\nconst symmetricTypeCheck = (alg, key) => {\n    if (key instanceof Uint8Array)\n        return;\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types, 'Uint8Array'));\n    }\n    if (key.type !== 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for symmetric algorithms must be of type \"secret\"`);\n    }\n};\nconst asymmetricTypeCheck = (alg, key, usage) => {\n    if (!isKeyLike(key)) {\n        throw new TypeError(invalidKeyInput(alg, key, ...types));\n    }\n    if (key.type === 'secret') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithms must not be of type \"secret\"`);\n    }\n    if (usage === 'sign' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm signing must be of type \"private\"`);\n    }\n    if (usage === 'decrypt' && key.type === 'public') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm decryption must be of type \"private\"`);\n    }\n    if (key.algorithm && usage === 'verify' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm verifying must be of type \"public\"`);\n    }\n    if (key.algorithm && usage === 'encrypt' && key.type === 'private') {\n        throw new TypeError(`${types.join(' or ')} instances for asymmetric algorithm encryption must be of type \"public\"`);\n    }\n};\nconst checkKeyType = (alg, key, usage) => {\n    const symmetric = alg.startsWith('HS') ||\n        alg === 'dir' ||\n        alg.startsWith('PBES2') ||\n        /^A\\d{3}(?:GCM)?KW$/.test(alg);\n    if (symmetric) {\n        symmetricTypeCheck(alg, key);\n    }\n    else {\n        asymmetricTypeCheck(alg, key, usage);\n    }\n};\nexport default checkKeyType;\n","import { JOSENotSupported } from '../util/errors.js';\nfunction validateCrit(Err, recognizedDefault, recognizedOption, protectedHeader, joseHeader) {\n    if (joseHeader.crit !== undefined && protectedHeader.crit === undefined) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be integrity protected');\n    }\n    if (!protectedHeader || protectedHeader.crit === undefined) {\n        return new Set();\n    }\n    if (!Array.isArray(protectedHeader.crit) ||\n        protectedHeader.crit.length === 0 ||\n        protectedHeader.crit.some((input) => typeof input !== 'string' || input.length === 0)) {\n        throw new Err('\"crit\" (Critical) Header Parameter MUST be an array of non-empty strings when present');\n    }\n    let recognized;\n    if (recognizedOption !== undefined) {\n        recognized = new Map([...Object.entries(recognizedOption), ...recognizedDefault.entries()]);\n    }\n    else {\n        recognized = recognizedDefault;\n    }\n    for (const parameter of protectedHeader.crit) {\n        if (!recognized.has(parameter)) {\n            throw new JOSENotSupported(`Extension Header Parameter \"${parameter}\" is not recognized`);\n        }\n        if (joseHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" is missing`);\n        }\n        else if (recognized.get(parameter) && protectedHeader[parameter] === undefined) {\n            throw new Err(`Extension Header Parameter \"${parameter}\" MUST be integrity protected`);\n        }\n    }\n    return new Set(protectedHeader.crit);\n}\nexport default validateCrit;\n","const validateAlgorithms = (option, algorithms) => {\n    if (algorithms !== undefined &&\n        (!Array.isArray(algorithms) || algorithms.some((s) => typeof s !== 'string'))) {\n        throw new TypeError(`\"${option}\" option must be an array of strings`);\n    }\n    if (!algorithms) {\n        return undefined;\n    }\n    return new Set(algorithms);\n};\nexport default validateAlgorithms;\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function dsaDigest(alg) {\n    switch (alg) {\n        case 'PS256':\n        case 'RS256':\n        case 'ES256':\n        case 'ES256K':\n            return 'sha256';\n        case 'PS384':\n        case 'RS384':\n        case 'ES384':\n            return 'sha384';\n        case 'PS512':\n        case 'RS512':\n        case 'ES512':\n            return 'sha512';\n        case 'EdDSA':\n            return undefined;\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { constants } from 'node:crypto';\nimport getNamedCurve from './get_named_curve.js';\nimport { JOSENotSupported } from '../util/errors.js';\nimport checkKeyLength from './check_key_length.js';\nconst PSS = {\n    padding: constants.RSA_PKCS1_PSS_PADDING,\n    saltLength: constants.RSA_PSS_SALTLEN_DIGEST,\n};\nconst ecCurveAlgMap = new Map([\n    ['ES256', 'P-256'],\n    ['ES256K', 'secp256k1'],\n    ['ES384', 'P-384'],\n    ['ES512', 'P-521'],\n]);\nexport default function keyForCrypto(alg, key) {\n    switch (alg) {\n        case 'EdDSA':\n            if (!['ed25519', 'ed448'].includes(key.asymmetricKeyType)) {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ed25519 or ed448');\n            }\n            return key;\n        case 'RS256':\n        case 'RS384':\n        case 'RS512':\n            if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa');\n            }\n            checkKeyLength(key, alg);\n            return key;\n        case 'PS256':\n        case 'PS384':\n        case 'PS512':\n            if (key.asymmetricKeyType === 'rsa-pss') {\n                const { hashAlgorithm, mgf1HashAlgorithm, saltLength } = key.asymmetricKeyDetails;\n                const length = parseInt(alg.slice(-3), 10);\n                if (hashAlgorithm !== undefined &&\n                    (hashAlgorithm !== `sha${length}` || mgf1HashAlgorithm !== hashAlgorithm)) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameters do not meet the requirements of \"alg\" ${alg}`);\n                }\n                if (saltLength !== undefined && saltLength > length >> 3) {\n                    throw new TypeError(`Invalid key for this operation, its RSA-PSS parameter saltLength does not meet the requirements of \"alg\" ${alg}`);\n                }\n            }\n            else if (key.asymmetricKeyType !== 'rsa') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be rsa or rsa-pss');\n            }\n            checkKeyLength(key, alg);\n            return { key, ...PSS };\n        case 'ES256':\n        case 'ES256K':\n        case 'ES384':\n        case 'ES512': {\n            if (key.asymmetricKeyType !== 'ec') {\n                throw new TypeError('Invalid key for this operation, its asymmetricKeyType must be ec');\n            }\n            const actual = getNamedCurve(key);\n            const expected = ecCurveAlgMap.get(alg);\n            if (actual !== expected) {\n                throw new TypeError(`Invalid key curve for the algorithm, its curve must be ${expected}, got ${actual}`);\n            }\n            return { dsaEncoding: 'ieee-p1363', key };\n        }\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { JOSENotSupported } from '../util/errors.js';\nexport default function hmacDigest(alg) {\n    switch (alg) {\n        case 'HS256':\n            return 'sha256';\n        case 'HS384':\n            return 'sha384';\n        case 'HS512':\n            return 'sha512';\n        default:\n            throw new JOSENotSupported(`alg ${alg} is not supported either by JOSE or your javascript runtime`);\n    }\n}\n","import { KeyObject, createSecretKey } from 'node:crypto';\nimport { isCryptoKey } from './webcrypto.js';\nimport { checkSigCryptoKey } from '../lib/crypto_key.js';\nimport invalidKeyInput from '../lib/invalid_key_input.js';\nimport { types } from './is_key_like.js';\nexport default function getSignVerifyKey(alg, key, usage) {\n    if (key instanceof Uint8Array) {\n        if (!alg.startsWith('HS')) {\n            throw new TypeError(invalidKeyInput(key, ...types));\n        }\n        return createSecretKey(key);\n    }\n    if (key instanceof KeyObject) {\n        return key;\n    }\n    if (isCryptoKey(key)) {\n        checkSigCryptoKey(key, alg, usage);\n        return KeyObject.from(key);\n    }\n    throw new TypeError(invalidKeyInput(key, ...types, 'Uint8Array'));\n}\n","import * as crypto from 'node:crypto';\nimport { promisify } from 'node:util';\nimport nodeDigest from './dsa_digest.js';\nimport hmacDigest from './hmac_digest.js';\nimport nodeKey from './node_key.js';\nimport getSignKey from './get_sign_verify_key.js';\nconst oneShotSign = promisify(crypto.sign);\nconst sign = async (alg, key, data) => {\n    const keyObject = getSignKey(alg, key, 'sign');\n    if (alg.startsWith('HS')) {\n        const hmac = crypto.createHmac(hmacDigest(alg), keyObject);\n        hmac.update(data);\n        return hmac.digest();\n    }\n    return oneShotSign(nodeDigest(alg), data, nodeKey(alg, keyObject));\n};\nexport default sign;\n","import * as crypto from 'node:crypto';\nimport { promisify } from 'node:util';\nimport nodeDigest from './dsa_digest.js';\nimport nodeKey from './node_key.js';\nimport sign from './sign.js';\nimport getVerifyKey from './get_sign_verify_key.js';\nconst oneShotVerify = promisify(crypto.verify);\nconst verify = async (alg, key, signature, data) => {\n    const keyObject = getVerifyKey(alg, key, 'verify');\n    if (alg.startsWith('HS')) {\n        const expected = await sign(alg, keyObject, data);\n        const actual = signature;\n        try {\n            return crypto.timingSafeEqual(actual, expected);\n        }\n        catch {\n            return false;\n        }\n    }\n    const algorithm = nodeDigest(alg);\n    const keyInput = nodeKey(alg, keyObject);\n    try {\n        return await oneShotVerify(algorithm, data, keyInput, signature);\n    }\n    catch {\n        return false;\n    }\n};\nexport default verify;\n","import { decode as base64url } from '../../runtime/base64url.js';\nimport verify from '../../runtime/verify.js';\nimport { JOSEAlgNotAllowed, JWSInvalid, JWSSignatureVerificationFailed } from '../../util/errors.js';\nimport { concat, encoder, decoder } from '../../lib/buffer_utils.js';\nimport isDisjoint from '../../lib/is_disjoint.js';\nimport isObject from '../../lib/is_object.js';\nimport checkKeyType from '../../lib/check_key_type.js';\nimport validateCrit from '../../lib/validate_crit.js';\nimport validateAlgorithms from '../../lib/validate_algorithms.js';\nexport async function flattenedVerify(jws, key, options) {\n    if (!isObject(jws)) {\n        throw new JWSInvalid('Flattened JWS must be an object');\n    }\n    if (jws.protected === undefined && jws.header === undefined) {\n        throw new JWSInvalid('Flattened JWS must have either of the \"protected\" or \"header\" members');\n    }\n    if (jws.protected !== undefined && typeof jws.protected !== 'string') {\n        throw new JWSInvalid('JWS Protected Header incorrect type');\n    }\n    if (jws.payload === undefined) {\n        throw new JWSInvalid('JWS Payload missing');\n    }\n    if (typeof jws.signature !== 'string') {\n        throw new JWSInvalid('JWS Signature missing or incorrect type');\n    }\n    if (jws.header !== undefined && !isObject(jws.header)) {\n        throw new JWSInvalid('JWS Unprotected Header incorrect type');\n    }\n    let parsedProt = {};\n    if (jws.protected) {\n        try {\n            const protectedHeader = base64url(jws.protected);\n            parsedProt = JSON.parse(decoder.decode(protectedHeader));\n        }\n        catch {\n            throw new JWSInvalid('JWS Protected Header is invalid');\n        }\n    }\n    if (!isDisjoint(parsedProt, jws.header)) {\n        throw new JWSInvalid('JWS Protected and JWS Unprotected Header Parameter names must be disjoint');\n    }\n    const joseHeader = {\n        ...parsedProt,\n        ...jws.header,\n    };\n    const extensions = validateCrit(JWSInvalid, new Map([['b64', true]]), options?.crit, parsedProt, joseHeader);\n    let b64 = true;\n    if (extensions.has('b64')) {\n        b64 = parsedProt.b64;\n        if (typeof b64 !== 'boolean') {\n            throw new JWSInvalid('The \"b64\" (base64url-encode payload) Header Parameter must be a boolean');\n        }\n    }\n    const { alg } = joseHeader;\n    if (typeof alg !== 'string' || !alg) {\n        throw new JWSInvalid('JWS \"alg\" (Algorithm) Header Parameter missing or invalid');\n    }\n    const algorithms = options && validateAlgorithms('algorithms', options.algorithms);\n    if (algorithms && !algorithms.has(alg)) {\n        throw new JOSEAlgNotAllowed('\"alg\" (Algorithm) Header Parameter value not allowed');\n    }\n    if (b64) {\n        if (typeof jws.payload !== 'string') {\n            throw new JWSInvalid('JWS Payload must be a string');\n        }\n    }\n    else if (typeof jws.payload !== 'string' && !(jws.payload instanceof Uint8Array)) {\n        throw new JWSInvalid('JWS Payload must be a string or an Uint8Array instance');\n    }\n    let resolvedKey = false;\n    if (typeof key === 'function') {\n        key = await key(parsedProt, jws);\n        resolvedKey = true;\n    }\n    checkKeyType(alg, key, 'verify');\n    const data = concat(encoder.encode(jws.protected ?? ''), encoder.encode('.'), typeof jws.payload === 'string' ? encoder.encode(jws.payload) : jws.payload);\n    let signature;\n    try {\n        signature = base64url(jws.signature);\n    }\n    catch {\n        throw new JWSInvalid('Failed to base64url decode the signature');\n    }\n    const verified = await verify(alg, key, signature, data);\n    if (!verified) {\n        throw new JWSSignatureVerificationFailed();\n    }\n    let payload;\n    if (b64) {\n        try {\n            payload = base64url(jws.payload);\n        }\n        catch {\n            throw new JWSInvalid('Failed to base64url decode the payload');\n        }\n    }\n    else if (typeof jws.payload === 'string') {\n        payload = encoder.encode(jws.payload);\n    }\n    else {\n        payload = jws.payload;\n    }\n    const result = { payload };\n    if (jws.protected !== undefined) {\n        result.protectedHeader = parsedProt;\n    }\n    if (jws.header !== undefined) {\n        result.unprotectedHeader = jws.header;\n    }\n    if (resolvedKey) {\n        return { ...result, key };\n    }\n    return result;\n}\n","import { flattenedVerify } from '../flattened/verify.js';\nimport { JWSInvalid } from '../../util/errors.js';\nimport { decoder } from '../../lib/buffer_utils.js';\nexport async function compactVerify(jws, key, options) {\n    if (jws instanceof Uint8Array) {\n        jws = decoder.decode(jws);\n    }\n    if (typeof jws !== 'string') {\n        throw new JWSInvalid('Compact JWS must be a string or Uint8Array');\n    }\n    const { 0: protectedHeader, 1: payload, 2: signature, length } = jws.split('.');\n    if (length !== 3) {\n        throw new JWSInvalid('Invalid Compact JWS');\n    }\n    const verified = await flattenedVerify({ payload, protected: protectedHeader, signature }, key, options);\n    const result = { payload: verified.payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","export default (date) => Math.floor(date.getTime() / 1000);\n","const minute = 60;\nconst hour = minute * 60;\nconst day = hour * 24;\nconst week = day * 7;\nconst year = day * 365.25;\nconst REGEX = /^(\\+|\\-)? ?(\\d+|\\d+\\.\\d+) ?(seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)(?: (ago|from now))?$/i;\nexport default (str) => {\n    const matched = REGEX.exec(str);\n    if (!matched || (matched[4] && matched[1])) {\n        throw new TypeError('Invalid time period format');\n    }\n    const value = parseFloat(matched[2]);\n    const unit = matched[3].toLowerCase();\n    let numericDate;\n    switch (unit) {\n        case 'sec':\n        case 'secs':\n        case 'second':\n        case 'seconds':\n        case 's':\n            numericDate = Math.round(value);\n            break;\n        case 'minute':\n        case 'minutes':\n        case 'min':\n        case 'mins':\n        case 'm':\n            numericDate = Math.round(value * minute);\n            break;\n        case 'hour':\n        case 'hours':\n        case 'hr':\n        case 'hrs':\n        case 'h':\n            numericDate = Math.round(value * hour);\n            break;\n        case 'day':\n        case 'days':\n        case 'd':\n            numericDate = Math.round(value * day);\n            break;\n        case 'week':\n        case 'weeks':\n        case 'w':\n            numericDate = Math.round(value * week);\n            break;\n        default:\n            numericDate = Math.round(value * year);\n            break;\n    }\n    if (matched[1] === '-' || matched[4] === 'ago') {\n        return -numericDate;\n    }\n    return numericDate;\n};\n","import { JWTClaimValidationFailed, JWTExpired, JWTInvalid } from '../util/errors.js';\nimport { decoder } from './buffer_utils.js';\nimport epoch from './epoch.js';\nimport secs from './secs.js';\nimport isObject from './is_object.js';\nconst normalizeTyp = (value) => value.toLowerCase().replace(/^application\\//, '');\nconst checkAudiencePresence = (audPayload, audOption) => {\n    if (typeof audPayload === 'string') {\n        return audOption.includes(audPayload);\n    }\n    if (Array.isArray(audPayload)) {\n        return audOption.some(Set.prototype.has.bind(new Set(audPayload)));\n    }\n    return false;\n};\nexport default (protectedHeader, encodedPayload, options = {}) => {\n    const { typ } = options;\n    if (typ &&\n        (typeof protectedHeader.typ !== 'string' ||\n            normalizeTyp(protectedHeader.typ) !== normalizeTyp(typ))) {\n        throw new JWTClaimValidationFailed('unexpected \"typ\" JWT header value', 'typ', 'check_failed');\n    }\n    let payload;\n    try {\n        payload = JSON.parse(decoder.decode(encodedPayload));\n    }\n    catch {\n    }\n    if (!isObject(payload)) {\n        throw new JWTInvalid('JWT Claims Set must be a top-level JSON object');\n    }\n    const { requiredClaims = [], issuer, subject, audience, maxTokenAge } = options;\n    const presenceCheck = [...requiredClaims];\n    if (maxTokenAge !== undefined)\n        presenceCheck.push('iat');\n    if (audience !== undefined)\n        presenceCheck.push('aud');\n    if (subject !== undefined)\n        presenceCheck.push('sub');\n    if (issuer !== undefined)\n        presenceCheck.push('iss');\n    for (const claim of new Set(presenceCheck.reverse())) {\n        if (!(claim in payload)) {\n            throw new JWTClaimValidationFailed(`missing required \"${claim}\" claim`, claim, 'missing');\n        }\n    }\n    if (issuer && !(Array.isArray(issuer) ? issuer : [issuer]).includes(payload.iss)) {\n        throw new JWTClaimValidationFailed('unexpected \"iss\" claim value', 'iss', 'check_failed');\n    }\n    if (subject && payload.sub !== subject) {\n        throw new JWTClaimValidationFailed('unexpected \"sub\" claim value', 'sub', 'check_failed');\n    }\n    if (audience &&\n        !checkAudiencePresence(payload.aud, typeof audience === 'string' ? [audience] : audience)) {\n        throw new JWTClaimValidationFailed('unexpected \"aud\" claim value', 'aud', 'check_failed');\n    }\n    let tolerance;\n    switch (typeof options.clockTolerance) {\n        case 'string':\n            tolerance = secs(options.clockTolerance);\n            break;\n        case 'number':\n            tolerance = options.clockTolerance;\n            break;\n        case 'undefined':\n            tolerance = 0;\n            break;\n        default:\n            throw new TypeError('Invalid clockTolerance option type');\n    }\n    const { currentDate } = options;\n    const now = epoch(currentDate || new Date());\n    if ((payload.iat !== undefined || maxTokenAge) && typeof payload.iat !== 'number') {\n        throw new JWTClaimValidationFailed('\"iat\" claim must be a number', 'iat', 'invalid');\n    }\n    if (payload.nbf !== undefined) {\n        if (typeof payload.nbf !== 'number') {\n            throw new JWTClaimValidationFailed('\"nbf\" claim must be a number', 'nbf', 'invalid');\n        }\n        if (payload.nbf > now + tolerance) {\n            throw new JWTClaimValidationFailed('\"nbf\" claim timestamp check failed', 'nbf', 'check_failed');\n        }\n    }\n    if (payload.exp !== undefined) {\n        if (typeof payload.exp !== 'number') {\n            throw new JWTClaimValidationFailed('\"exp\" claim must be a number', 'exp', 'invalid');\n        }\n        if (payload.exp <= now - tolerance) {\n            throw new JWTExpired('\"exp\" claim timestamp check failed', 'exp', 'check_failed');\n        }\n    }\n    if (maxTokenAge) {\n        const age = now - payload.iat;\n        const max = typeof maxTokenAge === 'number' ? maxTokenAge : secs(maxTokenAge);\n        if (age - tolerance > max) {\n            throw new JWTExpired('\"iat\" claim timestamp check failed (too far in the past)', 'iat', 'check_failed');\n        }\n        if (age < 0 - tolerance) {\n            throw new JWTClaimValidationFailed('\"iat\" claim timestamp check failed (it should be in the past)', 'iat', 'check_failed');\n        }\n    }\n    return payload;\n};\n","import { compactVerify } from '../jws/compact/verify.js';\nimport jwtPayload from '../lib/jwt_claims_set.js';\nimport { JWTInvalid } from '../util/errors.js';\nexport async function jwtVerify(jwt, key, options) {\n    const verified = await compactVerify(jwt, key, options);\n    if (verified.protectedHeader.crit?.includes('b64') && verified.protectedHeader.b64 === false) {\n        throw new JWTInvalid('JWTs MUST NOT use unencoded payload');\n    }\n    const payload = jwtPayload(verified.protectedHeader, verified.payload, options);\n    const result = { payload, protectedHeader: verified.protectedHeader };\n    if (typeof key === 'function') {\n        return { ...result, key: verified.key };\n    }\n    return result;\n}\n","export class CreateUserException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class MigrateUserException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class CreateOrgException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class AddUserToOrgException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class ChangeUserRoleInOrgException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class RemoveUserFromOrgException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class UpdateOrgException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class ForbiddenException extends Error {\n    readonly message: string;\n    readonly status: number;\n    constructor(message: string) {\n        super(message);\n        this.message = message;\n        this.status = 403;\n    }\n}\n\nexport class MagicLinkCreationException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class AccessTokenCreationException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class UnauthorizedException extends Error {\n    readonly message: string;\n    readonly status: number;\n    constructor(message: string) {\n        super(message);\n        this.message = message;\n        this.status = 401;\n    }\n}\n\nexport class UnexpectedException extends Error {\n    readonly message: string;\n    readonly status: number;\n    constructor(message: string) {\n        super(message);\n        this.message = message;\n        this.status = 503;\n    }\n}\n\nexport class UpdateUserEmailException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class UpdateUserPasswordException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class UpdateUserMetadataException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class UserNotFoundException extends Error {\n}\n\nexport class ApiKeyValidateException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class ApiKeyDeleteException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class ApiKeyUpdateException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class ApiKeyCreateException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class ApiKeyFetchException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n\nexport class BadRequestException extends Error {\n    readonly fieldToErrors: {[fieldName: string]: string[]};\n    constructor(message: string) {\n        super(message);\n        this.fieldToErrors = JSON.parse(message);\n    }\n}\n","import http from \"https\"\n\nexport type HttpResponse = {\n    statusCode?: number\n    response: string\n}\n\nexport function httpRequest(\n    authUrlOrigin: URL,\n    apiKey: string,\n    path: string,\n    method: string,\n    body?: string\n): Promise<HttpResponse> {\n    let headers: any = {\n        Authorization: \"Bearer \" + apiKey,\n        \"Content-Type\": \"application/json\",\n    }\n    if (body !== undefined) {\n        headers[\"Content-Length\"] = Buffer.byteLength(body)\n    }\n\n    return new Promise((resolve, reject) => {\n        const req = http.request(\n            {\n                protocol: authUrlOrigin.protocol,\n                hostname: authUrlOrigin.hostname,\n                port: authUrlOrigin.port,\n                path: path,\n                method: method,\n                headers: headers,\n            },\n            (res) => {\n                let response = \"\"\n                res.on(\"data\", (data) => {\n                    response += data\n                })\n                res.on(\"end\", () => {\n                    resolve({\n                        statusCode: res.statusCode,\n                        response: response,\n                    })\n                })\n            }\n        )\n\n        req.on(\"error\", (error) => {\n            reject(error)\n        })\n\n        if (body !== undefined) {\n            req.write(body)\n        }\n\n        req.end()\n    })\n}\n","export type SocialLoginProvider =\n    | \"Google\"\n    | \"GitHub\"\n    | \"Microsoft\"\n    | \"Slack\"\n    | \"LinkedIn\"\n    | \"Salesforce\"\n    | \"Xero\"\n    | \"QuickBooks Online\"\nexport type SamlLoginProvider = \"Google\" | \"Rippling\" | \"OneLogin\" | \"JumpCloud\" | \"Okta\" | \"Azure\" | \"Duo\" | \"Generic\"\n\nexport type LoginMethod =\n    | {\n          loginMethod: \"password\"\n      }\n    | {\n          loginMethod: \"magic_link\"\n      }\n    | {\n          loginMethod: \"social_sso\"\n          provider: SocialLoginProvider\n      }\n    | {\n          loginMethod: \"email_confirmation_link\"\n      }\n    | {\n          loginMethod: \"saml_sso\"\n          provider: SamlLoginProvider\n          orgId: string\n      }\n    | {\n          loginMethod: \"impersonation\"\n      }\n    | {\n          loginMethod: \"generated_from_backend_api\"\n      }\n    | {\n          loginMethod: \"unknown\"\n      }\n\nexport type InternalLoginMethod =\n    | {\n          login_method: \"password\"\n      }\n    | {\n          login_method: \"magic_link\"\n      }\n    | {\n          login_method: \"social_sso\"\n          provider: SocialLoginProvider\n      }\n    | {\n          login_method: \"email_confirmation_link\"\n      }\n    | {\n          login_method: \"saml_sso\"\n          provider: SamlLoginProvider\n          org_id: string\n      }\n    | {\n          login_method: \"impersonation\"\n      }\n    | {\n          login_method: \"generated_from_backend_api\"\n      }\n    | {\n          login_method: \"unknown\"\n      }\n\nexport function toLoginMethod(snake_case?: InternalLoginMethod): LoginMethod {\n    if (!snake_case) {\n        return { loginMethod: \"unknown\" }\n    }\n\n    switch (snake_case.login_method) {\n        case \"password\":\n            return { loginMethod: \"password\" }\n        case \"magic_link\":\n            return { loginMethod: \"magic_link\" }\n        case \"social_sso\":\n            return { loginMethod: \"social_sso\", provider: snake_case.provider }\n        case \"email_confirmation_link\":\n            return { loginMethod: \"email_confirmation_link\" }\n        case \"saml_sso\":\n            return { loginMethod: \"saml_sso\", provider: snake_case.provider, orgId: snake_case.org_id }\n        case \"impersonation\":\n            return { loginMethod: \"impersonation\" }\n        case \"generated_from_backend_api\":\n            return { loginMethod: \"generated_from_backend_api\" }\n        default:\n            return { loginMethod: \"unknown\" }\n    }\n}\n","import { InternalLoginMethod, LoginMethod, toLoginMethod } from \"./loginMethod\"\n\nexport type UserProperties = { [key: string]: unknown }\n\nexport type User = {\n    userId: string\n    orgIdToOrgMemberInfo?: OrgIdToOrgMemberInfo\n    email: string\n    firstName?: string\n    lastName?: string\n    username?: string\n    legacyUserId?: string\n    impersonatorUserId?: string\n    metadata?: { [key: string]: any }\n    properties?: UserProperties\n    loginMethod: LoginMethod\n}\n\nexport class UserClass {\n    public userId: string\n    public orgIdToUserOrgInfo?: { [orgId: string]: OrgMemberInfo }\n\n    // Metadata about the user\n    public email: string\n    public firstName?: string\n    public lastName?: string\n    public username?: string\n    public properties?: UserProperties\n    public loginMethod: LoginMethod\n\n    // If you used our migration APIs to migrate this user from a different system,\n    // this is their original ID from that system.\n    public legacyUserId?: string\n    public impersonatorUserId?: string\n\n    constructor(user: User) {\n        this.userId = user.userId\n        this.orgIdToUserOrgInfo = user.orgIdToOrgMemberInfo\n\n        this.email = user.email\n        this.firstName = user.firstName\n        this.lastName = user.lastName\n        this.username = user.username\n\n        this.legacyUserId = user.legacyUserId\n        this.impersonatorUserId = user.impersonatorUserId\n        this.properties = user.properties\n        this.loginMethod = user.loginMethod\n    }\n\n    public getOrg(orgId: string): OrgMemberInfo | undefined {\n        if (!this.orgIdToUserOrgInfo) {\n            return undefined\n        }\n\n        if (!this.orgIdToUserOrgInfo.hasOwnProperty(orgId)) {\n            return undefined\n        }\n\n        return this.orgIdToUserOrgInfo[orgId]\n    }\n\n    public getOrgByName(orgName: string): OrgMemberInfo | undefined {\n        if (!this.orgIdToUserOrgInfo) {\n            return undefined\n        }\n\n        const urlSafeOrgName = orgName.toLowerCase().replace(/ /g, \"-\")\n        for (const orgId in this.orgIdToUserOrgInfo) {\n            const orgMemberInfo = this.getOrg(orgId)\n            if (orgMemberInfo?.urlSafeOrgName === urlSafeOrgName) {\n                return orgMemberInfo\n            }\n        }\n\n        return undefined\n    }\n\n    public getUserProperty(key: string): unknown | undefined {\n        if (!this.properties || !this.properties.hasOwnProperty(key)) {\n            return undefined\n        }\n\n        return this.properties[key]\n    }\n\n    public getOrgs(): OrgMemberInfo[] {\n        if (!this.orgIdToUserOrgInfo) {\n            return []\n        }\n\n        return Object.values(this.orgIdToUserOrgInfo)\n    }\n\n    public isImpersonating(): boolean {\n        return !!this.impersonatorUserId\n    }\n\n    public isRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.isRole(role)\n    }\n\n    public isAtLeastRole(orgId: string, role: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.isAtLeastRole(role)\n    }\n\n    public hasPermission(orgId: string, permission: string): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.hasPermission(permission)\n    }\n\n    public hasAllPermissions(orgId: string, permissions: string[]): boolean {\n        const orgMemberInfo = this.getOrg(orgId)\n        if (!orgMemberInfo) {\n            return false\n        }\n\n        return orgMemberInfo.hasAllPermissions(permissions)\n    }\n\n    public static fromUser(user: User): UserClass {\n        return new UserClass(user)\n    }\n}\n\nexport type Org = {\n    orgId: string\n    name: string\n    maxUsers?: number\n    isSamlConfigured: boolean\n    metadata: { [key: string]: any }\n}\n\nexport type CreatedOrg = {\n    orgId: string\n    name: string\n}\n\nexport type CreatedUser = {\n    userId: string\n}\n\nexport type UserMetadata = {\n    userId: string\n\n    email: string\n    emailConfirmed: boolean\n    hasPassword: boolean\n\n    username?: string\n    firstName?: string\n    lastName?: string\n    pictureUrl?: string\n\n    locked: boolean\n    enabled: boolean\n    mfaEnabled: boolean\n    canCreateOrgs: boolean\n\n    createdAt: number\n    lastActiveAt: number\n\n    orgIdToOrgInfo?: OrgIdToOrgMemberInfo\n\n    // If you used our migration APIs to migrate this user from a different system,\n    //   this is their original ID from that system.\n    legacyUserId?: string\n    impersonatorUserId?: string\n    metadata?: { [key: string]: any }\n    properties?: { [key: string]: unknown }\n}\n\nexport class OrgMemberInfo {\n    public readonly orgId: string\n    public readonly orgName: string\n    public readonly orgMetadata: { [key: string]: unknown }\n    public readonly urlSafeOrgName: string\n\n    private readonly userAssignedRole: string\n    private readonly userInheritedRolesPlusCurrentRole: string[]\n    private readonly userPermissions: string[]\n\n    constructor(\n        orgId: string,\n        orgName: string,\n        orgMetadata: { [key: string]: any },\n        urlSafeOrgName: string,\n        userAssignedRole: string,\n        userInheritedRolesPlusCurrentRole: string[],\n        userPermissions: string[]\n    ) {\n        this.orgId = orgId\n        this.orgName = orgName\n        this.orgMetadata = orgMetadata\n        this.urlSafeOrgName = urlSafeOrgName\n\n        this.userAssignedRole = userAssignedRole\n        this.userInheritedRolesPlusCurrentRole = userInheritedRolesPlusCurrentRole\n        this.userPermissions = userPermissions\n    }\n\n    // getters\n    public get assignedRole(): string {\n        return this.userAssignedRole\n    }\n\n    public get permissions(): string[] {\n        return this.userPermissions\n    }\n\n    get inheritedRolesPlusCurrentRole(): string[] {\n        return this.userInheritedRolesPlusCurrentRole\n    }\n\n    // validation methods\n    public isRole(role: string): boolean {\n        return this.userAssignedRole === role\n    }\n\n    public isAtLeastRole(role: string): boolean {\n        return this.userInheritedRolesPlusCurrentRole.includes(role)\n    }\n\n    public hasPermission(permission: string): boolean {\n        return this.userPermissions.includes(permission)\n    }\n\n    public hasAllPermissions(permissions: string[]): boolean {\n        return permissions.every((permission) => this.hasPermission(permission))\n    }\n\n    public static fromJSON(json: string): OrgMemberInfo {\n        const obj = JSON.parse(json)\n        try {\n            return new OrgMemberInfo(\n                obj.orgId,\n                obj.orgName,\n                obj.orgMetadata,\n                obj.urlSafeOrgName,\n                obj.userAssignedRole,\n                obj.userInheritedRolesPlusCurrentRole,\n                obj.userPermissions\n            )\n        } catch (e) {\n            console.error(\n                \"Unable to parse UserOrgInfo. Make sure the JSON string is a stringified `UserOrgInfo` type.\",\n                e\n            )\n            throw e\n        }\n    }\n}\n\nexport type UserAndOrgMemberInfo = {\n    user: User\n    orgMemberInfo: OrgMemberInfo\n}\n\nexport type OrgIdToOrgMemberInfo = {\n    [orgId: string]: OrgMemberInfo\n}\n\n// These Internal types exist since the server returns snake case, but typescript/javascript\n// convention is camelCase.\nexport type InternalOrgMemberInfo = {\n    org_id: string\n    org_name: string\n    org_metadata: { [key: string]: any }\n    url_safe_org_name: string\n    user_role: string\n    inherited_user_roles_plus_current_role: string[]\n    user_permissions: string[]\n}\n\n// This type is used to represent the user returned from the refresh token.\nexport type InternalUser = {\n    user_id: string\n    org_id_to_org_member_info?: { [org_id: string]: InternalOrgMemberInfo }\n\n    email: string\n    first_name?: string\n    last_name?: string\n    username?: string\n    metadata?: { [key: string]: any }\n    properties?: { [key: string]: unknown }\n    login_method?: InternalLoginMethod\n\n    // If you used our migration APIs to migrate this user from a different system, this is their original ID from that system.\n    legacy_user_id?: string\n    impersonator_user_id?: string\n}\n\nexport function toUser(snake_case: InternalUser): User {\n    const camelCase: User = {\n        userId: snake_case.user_id,\n        orgIdToOrgMemberInfo: toOrgIdToOrgMemberInfo(snake_case.org_id_to_org_member_info),\n        email: snake_case.email,\n        firstName: snake_case.first_name,\n        lastName: snake_case.last_name,\n        username: snake_case.username,\n        legacyUserId: snake_case.legacy_user_id,\n        impersonatorUserId: snake_case.impersonator_user_id,\n        metadata: snake_case.metadata,\n        properties: snake_case.properties,\n        loginMethod: toLoginMethod(snake_case.login_method),\n    }\n\n    return camelCase\n}\n\nexport function toOrgIdToOrgMemberInfo(snake_case?: {\n    [org_id: string]: InternalOrgMemberInfo\n}): OrgIdToOrgMemberInfo | undefined {\n    if (snake_case === undefined) {\n        return undefined\n    }\n    const camelCase: OrgIdToOrgMemberInfo = {}\n\n    for (const key of Object.keys(snake_case)) {\n        const snakeCaseValue = snake_case[key]\n        if (snakeCaseValue) {\n            camelCase[key] = new OrgMemberInfo(\n                snakeCaseValue.org_id,\n                snakeCaseValue.org_name,\n                snakeCaseValue.org_metadata,\n                snakeCaseValue.url_safe_org_name,\n                snakeCaseValue.user_role,\n                snakeCaseValue.inherited_user_roles_plus_current_role,\n                snakeCaseValue.user_permissions\n            )\n        }\n    }\n\n    return camelCase\n}\n\nexport type ApiKeyNew = {\n    apiKeyId: string\n    apiKeyToken: string\n}\n\nexport type ApiKeyFull = {\n    apiKeyId: string\n    createdAt: number\n    expiresAtSeconds: number\n    metadata: { [key: string]: any }\n    userId: string\n    orgId: string\n}\n\nexport type ApiKeyResultPage = {\n    apiKeys: ApiKeyFull[]\n    totalApiKeys: number\n    currentPage: number\n    pageSize: number\n    hasMoreResults: boolean\n}\n\nexport type ApiKeyValidation = {\n    metadata?: { [key: string]: any }\n    user?: UserMetadata\n    org?: Org\n    userInOrg?: OrgMemberInfo\n}\n\nexport type PersonalApiKeyValidation = {\n    metadata?: { [key: string]: any }\n    user: UserMetadata\n}\n\nexport type OrgApiKeyValidation = {\n    metadata?: { [key: string]: any }\n    org: Org\n    user?: UserMetadata\n    userInOrg?: OrgMemberInfo\n}\n","import { OrgMemberInfo } from \"./user\"\n\nconst idRegex = /^[0-9a-fA-F]{8}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{4}\\b-[0-9a-fA-F]{12}$/i\nconst hexRegex = /^[0-9a-fA-F]{32}$/i\n\nexport function isValidId(id: string): boolean {\n    return idRegex.test(id)\n}\n\nexport function isValidHex(id: string): boolean {\n    return hexRegex.test(id)\n}\n\nexport function removeBearerIfExists(token: string): string {\n    if (!token) {\n        return token\n    } else if (token.toLowerCase().startsWith(\"bearer \")) {\n        return token.substring(7)\n    } else {\n        return token\n    }\n}\n\nexport function formatQueryParameters(obj: { [key: string]: any }): string {\n    const params = new URLSearchParams()\n    for (const [key, value] of Object.entries(obj)) {\n        if (value !== undefined) {\n            params.set(key, value)\n        }\n    }\n    return params.toString()\n}\n\nexport function parseSnakeCaseToCamelCase(response: string) {\n    let parsedObject = JSON.parse(response)\n    return processKeys(parsedObject)\n}\n\nconst keysForValueNotToModify = [\"metadata\", \"org_metadata\"]\n\nfunction isOrgMemberInfo(value: any) {\n    return (\n        value &&\n        typeof value === \"object\" &&\n        value.hasOwnProperty(\"orgId\") &&\n        value.hasOwnProperty(\"orgName\") &&\n        value.hasOwnProperty(\"urlSafeOrgName\") &&\n        value.hasOwnProperty(\"orgMetadata\") &&\n        value.hasOwnProperty(\"userAssignedRole\") &&\n        value.hasOwnProperty(\"userRoles\") &&\n        value.hasOwnProperty(\"userPermissions\")\n    )\n}\n\nfunction processKeys(obj: any): any {\n    let newObj: any = Array.isArray(obj) ? [] : {}\n    for (let key in obj) {\n        if (!obj.hasOwnProperty(key)) {\n            continue\n        }\n\n        let value = obj[key]\n        const doNotModifyValue = keysForValueNotToModify.includes(key)\n        if (!doNotModifyValue && value && typeof value === \"object\") {\n            value = processKeys(value)\n        }\n\n        if (isOrgMemberInfo(value)) {\n            value = new OrgMemberInfo(\n                value[\"orgId\"],\n                value[\"orgName\"],\n                value[\"orgMetadata\"],\n                value[\"urlSafeOrgName\"],\n                value[\"userAssignedRole\"],\n                value[\"userRoles\"],\n                value[\"userPermissions\"]\n            )\n        }\n\n        let newKey\n        if (key === \"user_role\") {\n            newKey = \"userAssignedRole\"\n        } else if (key === \"inherited_user_roles_plus_current_role\") {\n            newKey = \"userRoles\"\n        } else {\n            newKey = camelCase(key)\n        }\n\n        newObj[newKey] = value\n    }\n    return newObj\n}\n\nfunction camelCase(key: string): string {\n    return key.replace(/_([a-z])/g, function (g) {\n        return g[1].toUpperCase()\n    })\n}\n","import { AccessTokenCreationException, UserNotFoundException } from \"../exceptions\"\nimport { httpRequest } from \"../http\"\nimport { isValidId } from \"../utils\"\n\nconst ENDPOINT_PATH = \"/api/backend/v1/access_token\"\n\nexport type CreateAccessTokenRequest = {\n    userId: string\n    durationInMinutes: number\n}\n\nexport type AccessToken = {\n    access_token: string\n}\n\n// POST\nexport function createAccessToken(\n    authUrl: URL,\n    integrationApiKey: string,\n    createAccessTokenRequest: CreateAccessTokenRequest\n): Promise<AccessToken> {\n    if (!isValidId(createAccessTokenRequest.userId)) {\n        throw new UserNotFoundException()\n    }\n\n    const request = {\n        user_id: createAccessTokenRequest.userId,\n        duration_in_minutes: createAccessTokenRequest.durationInMinutes,\n    }\n    return httpRequest(authUrl, integrationApiKey, ENDPOINT_PATH, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new AccessTokenCreationException(httpResponse.response)\n            } else if (httpResponse.statusCode === 403) {\n                throw new UserNotFoundException()\n            } else if (httpResponse.statusCode === 404) {\n                throw new Error(\"Access token creation is not enabled\")\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when creating access token\")\n            }\n\n            return JSON.parse(httpResponse.response)\n        }\n    )\n}\n","import {\n    ApiKeyCreateException,\n    ApiKeyDeleteException,\n    ApiKeyFetchException,\n    ApiKeyUpdateException,\n    ApiKeyValidateException,\n} from \"../exceptions\"\nimport { httpRequest } from \"../http\"\nimport { ApiKeyFull, ApiKeyNew, ApiKeyResultPage, ApiKeyValidation } from \"../user\"\nimport { formatQueryParameters, isValidHex, parseSnakeCaseToCamelCase, removeBearerIfExists } from \"../utils\"\n\nconst ENDPOINT_PATH = \"/api/backend/v1/end_user_api_keys\"\n\n// GET\nexport function fetchApiKey(authUrl: URL, integrationApiKey: string, apiKeyId: string): Promise<ApiKeyFull> {\n    if (!isValidHex(apiKeyId)) {\n        throw new ApiKeyFetchException(\"Invalid api key\")\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${apiKeyId}`, \"GET\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new ApiKeyFetchException(httpResponse.response)\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when creating the end user api key\")\n        }\n\n        return parseSnakeCaseToCamelCase(httpResponse.response)\n    })\n}\n\nexport type ApiKeysQueryRequest = {\n    orgId?: string\n    userId?: string\n    userEmail?: string\n    pageSize?: number\n    pageNumber?: number\n}\n\nexport function fetchCurrentApiKeys(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyQuery: ApiKeysQueryRequest\n): Promise<ApiKeyResultPage> {\n    const request = {\n        org_id: apiKeyQuery.orgId,\n        user_id: apiKeyQuery.userId,\n        user_email: apiKeyQuery.userEmail,\n        page_size: apiKeyQuery.pageSize,\n        page_number: apiKeyQuery.pageNumber,\n    }\n    const queryString = formatQueryParameters(request)\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}?${queryString}`, \"GET\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new ApiKeyFetchException(httpResponse.response)\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when creating the end user api key\")\n        }\n\n        return parseSnakeCaseToCamelCase(httpResponse.response)\n    })\n}\n\nexport function fetchArchivedApiKeys(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyQuery: ApiKeysQueryRequest\n): Promise<ApiKeyResultPage> {\n    const request = {\n        org_id: apiKeyQuery.orgId,\n        user_id: apiKeyQuery.userId,\n        user_email: apiKeyQuery.userEmail,\n        page_size: apiKeyQuery.pageSize,\n        page_number: apiKeyQuery.pageNumber,\n    }\n    const queryString = formatQueryParameters(request)\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/archived?${queryString}`, \"GET\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new ApiKeyFetchException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when creating the end user api key\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\n// POST\nexport type ApiKeysCreateRequest = {\n    orgId?: string\n    userId?: string\n    expiresAtSeconds?: number\n    metadata?: object\n}\n\nexport function createApiKey(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyCreate: ApiKeysCreateRequest\n): Promise<ApiKeyNew> {\n    const request = {\n        org_id: apiKeyCreate.orgId,\n        user_id: apiKeyCreate.userId,\n        expires_at_seconds: apiKeyCreate.expiresAtSeconds,\n        metadata: apiKeyCreate.metadata,\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new ApiKeyCreateException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when creating the end user api key\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\nexport function validateApiKey(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyToken: string\n): Promise<ApiKeyValidation> {\n    const request = {\n        api_key_token: removeBearerIfExists(apiKeyToken),\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/validate`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new ApiKeyValidateException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when updating the end user api key\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\n// PUT/PATCH\nexport type ApiKeyUpdateRequest = {\n    expiresAtSeconds?: number\n    metadata?: string\n}\n\nexport function updateApiKey(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyId: string,\n    apiKeyUpdate: ApiKeyUpdateRequest\n): Promise<boolean> {\n    if (!isValidHex(apiKeyId)) {\n        throw new ApiKeyUpdateException(\"Invalid api key\")\n    }\n\n    const request = {\n        expires_at_seconds: apiKeyUpdate.expiresAtSeconds,\n        metadata: apiKeyUpdate.metadata,\n    }\n\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${apiKeyId}`,\n        \"PATCH\",\n        JSON.stringify(request)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new ApiKeyUpdateException(httpResponse.response)\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when updating the end user api key\")\n        }\n\n        return true\n    })\n}\n\n// DELETE\nexport function deleteApiKey(authUrl: URL, integrationApiKey: string, apiKeyId: string): Promise<boolean> {\n    if (!isValidHex(apiKeyId)) {\n        throw new ApiKeyDeleteException(\"Invalid api key\")\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${apiKeyId}`, \"DELETE\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new ApiKeyDeleteException(httpResponse.response)\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when deleting the end user api key\")\n        }\n\n        return true\n    })\n}\n","import { MagicLinkCreationException } from \"../exceptions\"\nimport { httpRequest } from \"../http\"\n\nconst ENDPOINT_PATH = \"/api/backend/v1/magic_link\"\n\nexport type CreateMagicLinkRequest = {\n    email: string\n    redirectToUrl?: string\n    expiresInHours?: string\n    createNewUserIfOneDoesntExist?: boolean\n}\n\nexport type MagicLink = {\n    url: string\n}\n\n// POST\nexport function createMagicLink(\n    authUrl: URL,\n    integrationApiKey: string,\n    createMagicLinkRequest: CreateMagicLinkRequest\n): Promise<MagicLink> {\n    const request = {\n        email: createMagicLinkRequest.email,\n        redirect_to_url: createMagicLinkRequest.redirectToUrl,\n        expires_in_hours: createMagicLinkRequest.expiresInHours,\n        create_new_user_if_one_doesnt_exist: createMagicLinkRequest.createNewUserIfOneDoesntExist,\n    }\n    return httpRequest(authUrl, integrationApiKey, ENDPOINT_PATH, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new MagicLinkCreationException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when creating magic link\")\n            }\n\n            return JSON.parse(httpResponse.response)\n        }\n    )\n}\n","import { MigrateUserException } from \"../exceptions\"\nimport { httpRequest } from \"../http\"\nimport { User } from \"../user\"\nimport { parseSnakeCaseToCamelCase } from \"../utils\"\n\nconst ENDPOINT_PATH = \"/api/backend/v1/migrate_user\"\n\n// POST\nexport type MigrateUserFromExternalSourceRequest = {\n    email: string\n    emailConfirmed: boolean\n\n    existingUserId?: string\n    existingPasswordHash?: string\n    existingMfaBase32EncodedSecret?: string\n    askUserToUpdatePasswordOnLogin?: boolean\n\n    enabled?: boolean\n\n    firstName?: string\n    lastName?: string\n    username?: string\n    properties?: { [key: string]: any }\n}\n\nexport function migrateUserFromExternalSource(\n    authUrl: URL,\n    integrationApiKey: string,\n    migrateUserFromExternalSourceRequest: MigrateUserFromExternalSourceRequest\n): Promise<User> {\n    const request = {\n        email: migrateUserFromExternalSourceRequest.email,\n        email_confirmed: migrateUserFromExternalSourceRequest.emailConfirmed,\n\n        existing_user_id: migrateUserFromExternalSourceRequest.existingUserId,\n        existing_password_hash: migrateUserFromExternalSourceRequest.existingPasswordHash,\n        existing_mfa_base32_encoded_secret: migrateUserFromExternalSourceRequest.existingMfaBase32EncodedSecret,\n        update_password_required: migrateUserFromExternalSourceRequest.askUserToUpdatePasswordOnLogin,\n\n        enabled: migrateUserFromExternalSourceRequest.enabled,\n\n        first_name: migrateUserFromExternalSourceRequest.firstName,\n        last_name: migrateUserFromExternalSourceRequest.lastName,\n        username: migrateUserFromExternalSourceRequest.username,\n        properties: migrateUserFromExternalSourceRequest.properties,\n    }\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new MigrateUserException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when migrating user\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n","import {\n    AddUserToOrgException,\n    ChangeUserRoleInOrgException,\n    CreateOrgException,\n    RemoveUserFromOrgException,\n    UpdateOrgException,\n} from \"../exceptions\"\nimport { httpRequest } from \"../http\"\nimport { CreatedOrg, Org } from \"../user\"\nimport { isValidId, parseSnakeCaseToCamelCase } from \"../utils\"\n\nconst ENDPOINT_PATH = \"/api/backend/v1/org\"\n\n// GET\nexport function fetchOrg(authUrl: URL, integrationApiKey: string, orgId: string): Promise<Org | null> {\n    if (!isValidId(orgId)) {\n        return Promise.resolve(null)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${orgId}`, \"GET\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 404) {\n            return null\n        } else if (httpResponse.statusCode === 426) {\n            throw new Error(\n                \"Cannot use organizations unless B2B support is enabled. Enable it in your PropelAuth dashboard.\"\n            )\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when fetching org\")\n        }\n\n        return parseSnakeCaseToCamelCase(httpResponse.response)\n    })\n}\n\n// POST\nexport type OrgQuery = {\n    pageSize?: number\n    pageNumber?: number\n    orderBy?: \"CREATED_AT_ASC\" | \"CREATED_AT_DESC\" | \"NAME\"\n}\n\nexport type OrgQueryResponse = {\n    orgs: Org[]\n    totalOrgs: number\n    currentPage: number\n    pageSize: number\n    hasMoreResults: boolean\n}\n\nexport function fetchOrgByQuery(authUrl: URL, integrationApiKey: string, query: OrgQuery): Promise<OrgQueryResponse> {\n    const request = {\n        page_size: query.pageSize,\n        page_number: query.pageNumber,\n        order_by: query.orderBy,\n    }\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/query`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new Error(\"Invalid query \" + httpResponse.response)\n            } else if (httpResponse.statusCode === 426) {\n                throw new Error(\n                    \"Cannot use organizations unless B2B support is enabled. Enable it in your PropelAuth dashboard.\"\n                )\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when fetching orgs by query\")\n            }\n\n            return JSON.parse(httpResponse.response, function (key, value) {\n                if (key === \"org_id\") {\n                    this.orgId = value\n                } else if (key === \"org_name\") {\n                    this.name = value\n                } else if (key === \"max_users\") {\n                    this.maxUsers = value\n                } else if (key === \"total_orgs\") {\n                    this.totalOrgs = value\n                } else if (key === \"current_page\") {\n                    this.currentPage = value\n                } else if (key === \"page_size\") {\n                    this.pageSize = value\n                } else if (key === \"has_more_results\") {\n                    this.hasMoreResults = value\n                } else {\n                    return value\n                }\n            })\n        }\n    )\n}\n\nexport type CreateOrgRequest = {\n    name: string\n    domain?: string\n    enableAutoJoiningByDomain?: boolean\n    membersMustHaveMatchingDomain?: boolean\n    maxUsers?: number\n}\n\ntype CreateOrgApiRequest = {\n    name: string\n    domain?: string\n    enable_auto_joining_by_domain?: boolean\n    members_must_have_matching_domain?: boolean\n    max_users?: number\n}\n\nexport function createOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    createOrgRequest: CreateOrgRequest\n): Promise<CreatedOrg> {\n    const {\n        name,\n        domain,\n        enableAutoJoiningByDomain = false,\n        membersMustHaveMatchingDomain = false,\n        maxUsers,\n    } = createOrgRequest\n    const request: CreateOrgApiRequest = {\n        name,\n        enable_auto_joining_by_domain: enableAutoJoiningByDomain,\n        members_must_have_matching_domain: membersMustHaveMatchingDomain,\n    }\n    if (domain) {\n        request[\"domain\"] = domain\n    }\n    if (maxUsers) {\n        request[\"max_users\"] = maxUsers\n    }\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new CreateOrgException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when creating org\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\nexport type AddUserToOrgRequest = {\n    userId: string\n    orgId: string\n    role: string\n}\n\nexport function addUserToOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    addUserToOrgRequest: AddUserToOrgRequest\n): Promise<boolean> {\n    const request = {\n        user_id: addUserToOrgRequest.userId,\n        org_id: addUserToOrgRequest.orgId,\n        role: addUserToOrgRequest.role,\n    }\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/add_user`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new AddUserToOrgException(httpResponse.response)\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when adding user to org\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport type ChangeUserRoleInOrgRequest = {\n    userId: string\n    orgId: string\n    role: string\n}\n\nexport function changeUserRoleInOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    changeUserRoleInOrgRequest: ChangeUserRoleInOrgRequest\n): Promise<boolean> {\n    const request = {\n        user_id: changeUserRoleInOrgRequest.userId,\n        org_id: changeUserRoleInOrgRequest.orgId,\n        role: changeUserRoleInOrgRequest.role,\n    }\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/change_role`,\n        \"POST\",\n        JSON.stringify(request)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new ChangeUserRoleInOrgException(httpResponse.response)\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when changing users role in org\")\n        }\n\n        return true\n    })\n}\n\nexport type RemoveUserFromOrgRequest = {\n    userId: string\n    orgId: string\n}\n\nexport function removeUserFromOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    removeUserFromOrgRequest: RemoveUserFromOrgRequest\n): Promise<boolean> {\n    const request = {\n        user_id: removeUserFromOrgRequest.userId,\n        org_id: removeUserFromOrgRequest.orgId,\n    }\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/remove_user`,\n        \"POST\",\n        JSON.stringify(request)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new RemoveUserFromOrgException(httpResponse.response)\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when removing users from org\")\n        }\n\n        return true\n    })\n}\n\nexport function allowOrgToSetupSamlConnection(\n    authUrl: URL,\n    integrationApiKey: string,\n    orgId: string\n): Promise<boolean> {\n    if (!isValidId(orgId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${orgId}/allow_saml`, \"POST\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when allowing org to setup SAML connection\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport function disallowOrgToSetupSamlConnection(\n    authUrl: URL,\n    integrationApiKey: string,\n    orgId: string\n): Promise<boolean> {\n    if (!isValidId(orgId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${orgId}/disallow_saml`, \"POST\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when disallowing org to setup SAML connection\")\n            }\n\n            return true\n        }\n    )\n}\n\n// PUT/PATCH\nexport type UpdateOrgRequest = {\n    orgId: string\n    name?: string\n    canSetupSaml?: boolean\n    maxUsers?: number\n    metadata?: { [key: string]: any }\n    canJoinOnEmailDomainMatch?: boolean // In the backend, this is the `domain_autojoin` argument.\n    membersMustHaveEmailDomainMatch?: boolean // In the backend, this is the `domain_restrict` argument.\n    domain?: string\n    // TODO: Add `require_2fa_by` optional argument.\n}\n\nexport function updateOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    updateOrgRequest: UpdateOrgRequest\n): Promise<boolean> {\n    if (!isValidId(updateOrgRequest.orgId)) {\n        return Promise.resolve(false)\n    }\n\n    const request = {\n        name: updateOrgRequest.name,\n        can_setup_saml: updateOrgRequest.canSetupSaml,\n        metadata: updateOrgRequest.metadata,\n        max_users: updateOrgRequest.maxUsers,\n        autojoin_by_domain: updateOrgRequest.canJoinOnEmailDomainMatch,\n        restrict_to_domain: updateOrgRequest.membersMustHaveEmailDomainMatch,\n        domain: updateOrgRequest.domain,\n    }\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${updateOrgRequest.orgId}`,\n        \"PUT\",\n        JSON.stringify(request)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new UpdateOrgException(httpResponse.response)\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when updating org\")\n        }\n\n        return true\n    })\n}\n\n// DELETE\nexport function deleteOrg(authUrl: URL, integrationApiKey: string, orgId: string): Promise<boolean> {\n    if (!isValidId(orgId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${orgId}`, \"DELETE\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when deleting org\")\n        }\n\n        return true\n    })\n}\n","import * as jose from \"jose\"\nimport { UnexpectedException } from \"../exceptions\"\nimport { httpRequest } from \"../http\"\n\nexport type TokenVerificationMetadata = {\n    verifierKey: string\n    issuer: string\n}\n\nexport interface TokenVerificationMetadataWithPublicKey {\n    tokenVerificationMetadata: TokenVerificationMetadata\n    publicKey: jose.KeyLike\n}\n\nconst ENDPOINT_PATH = \"/api/v1/token_verification_metadata\"\n\n// GET\nexport function fetchTokenVerificationMetadata(\n    authUrl: URL,\n    integrationApiKey: string,\n    manualTokenVerificationMetadata?: TokenVerificationMetadata\n): Promise<TokenVerificationMetadata> {\n    if (manualTokenVerificationMetadata) {\n        return Promise.resolve(manualTokenVerificationMetadata)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, ENDPOINT_PATH, \"GET\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            console.error(\"Your API key is incorrect\")\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            console.error(`Error fetching token verification metadata: ${httpResponse.statusCode}`)\n            throw new Error(\"Unknown error when fetching token verification metadata\")\n        }\n\n        const jsonParse = JSON.parse(httpResponse.response)\n        return {\n            verifierKey: jsonParse.verifier_key_pem,\n            issuer: formatIssuer(authUrl),\n        }\n    })\n}\n\nexport const getTokenVerificationMetadataPromise = async (\n    tokenVerificationMetadataPromise: Promise<TokenVerificationMetadata | void>\n): Promise<TokenVerificationMetadataWithPublicKey> => {\n    const tokenVerificationMetadata = await tokenVerificationMetadataPromise\n\n    if (!tokenVerificationMetadata) {\n        const errorMessage = `Auth library not initialized, rejecting request. \n            This can mean that your API key was invalid or that the request to fetch token metadata failed. \n            Sometimes, this can happen if you are deploying to an environment without external internet access. \n            One workaround is to skip the fetch by passing in manualTokenVerificationMetadata to the initialization function.`\n        console.error(errorMessage)\n        throw new UnexpectedException(errorMessage)\n    }\n\n    try {\n        const publicKey = await jose.importSPKI(tokenVerificationMetadata.verifierKey, \"RS256\")\n        return {\n            publicKey,\n            tokenVerificationMetadata,\n        }\n    } catch (e) {\n        const publicKeyErrorMessage = \"Error initializing auth library. Unable to import public key\"\n        console.error(publicKeyErrorMessage)\n        throw new UnexpectedException(publicKeyErrorMessage)\n    }\n}\n\nfunction formatIssuer(authUrl: URL): string {\n    return authUrl.origin\n}\n","import {\n    BadRequestException,\n    CreateUserException,\n    UpdateUserEmailException,\n    UpdateUserMetadataException,\n    UpdateUserPasswordException,\n} from \"../exceptions\"\nimport { httpRequest } from \"../http\"\nimport { CreatedUser, UserMetadata } from \"../user\"\nimport { formatQueryParameters, isValidId, parseSnakeCaseToCamelCase } from \"../utils\"\n\nconst ENDPOINT_PATH = \"/api/backend/v1/user\"\n\nexport type UsersQuery = {\n    pageSize?: number\n    pageNumber?: number\n    orderBy?: \"CREATED_AT_ASC\" | \"CREATED_AT_DESC\" | \"LAST_ACTIVE_AT_ASC\" | \"LAST_ACTIVE_AT_DESC\" | \"EMAIL\" | \"USERNAME\"\n    emailOrUsername?: string\n    includeOrgs?: boolean\n}\n\nexport type UsersPagedResponse = {\n    users: UserMetadata[]\n    totalUsers: number\n    currentPage: number\n    pageSize: number\n    hasMoreResults: boolean\n}\n\nexport type UsersInOrgQuery = {\n    orgId: string\n    pageSize?: number\n    pageNumber?: number\n    includeOrgs?: boolean\n}\n\n// GET\nexport function fetchUserMetadataByQuery(\n    authUrl: URL,\n    integrationApiKey: string,\n    pathParam: string,\n    query: any\n): Promise<UserMetadata | null> {\n    const queryString = formatQueryParameters(query)\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${pathParam}?${queryString}`, \"GET\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return null\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when fetching user metadata\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\nexport function fetchUserMetadataByUserIdWithIdCheck(\n    authUrl: URL,\n    integrationApiKey: string,\n    userId: string,\n    includeOrgs?: boolean\n): Promise<UserMetadata | null> {\n    if (isValidId(userId)) {\n        return fetchUserMetadataByQuery(authUrl, integrationApiKey, userId, { include_orgs: includeOrgs || false })\n    } else {\n        return Promise.resolve(null)\n    }\n}\n\nexport function fetchUsersByQuery(\n    authUrl: URL,\n    integrationApiKey: string,\n    query: UsersQuery\n): Promise<UsersPagedResponse> {\n    const queryParams = {\n        page_size: query.pageSize,\n        page_number: query.pageNumber,\n        order_by: query.orderBy,\n        email_or_username: query.emailOrUsername,\n        include_orgs: query.includeOrgs,\n    }\n    const q = formatQueryParameters(queryParams)\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/query?${q}`, \"GET\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new Error(\"Invalid query \" + httpResponse.response)\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when fetching users by query\")\n        }\n\n        return parseSnakeCaseToCamelCase(httpResponse.response)\n    })\n}\n\nexport function fetchUsersInOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    query: UsersInOrgQuery\n): Promise<UsersPagedResponse> {\n    if (!isValidId(query.orgId)) {\n        const emptyResponse: UsersPagedResponse = {\n            users: [],\n            totalUsers: 0,\n            currentPage: query.pageNumber || 0,\n            pageSize: query.pageSize || 10,\n            hasMoreResults: false,\n        }\n        return Promise.resolve(emptyResponse)\n    }\n\n    const queryParams = {\n        page_size: query.pageSize,\n        page_number: query.pageNumber,\n        include_orgs: query.includeOrgs,\n    }\n    const queryString = formatQueryParameters(queryParams)\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/org/${query.orgId}?${queryString}`, \"GET\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new Error(\"Invalid query \" + httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when fetching users in org\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\n// POST\nexport function fetchBatchUserMetadata(\n    authUrl: URL,\n    integrationApiKey: string,\n    type: string,\n    values: string[],\n    keyFunction: (x: UserMetadata) => string,\n    includeOrgs?: boolean\n): Promise<{ [key: string]: UserMetadata }> {\n    const queryString = includeOrgs ? formatQueryParameters({ include_orgs: includeOrgs }) : \"\"\n    const jsonBody = { [type]: values }\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${type}?${queryString}`,\n        \"POST\",\n        JSON.stringify(jsonBody)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new Error(\"Bad request \" + httpResponse.response)\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when fetching batch user metadata\")\n        }\n\n        const userMetadatas = parseSnakeCaseToCamelCase(httpResponse.response)\n\n        const returnValue: { [key: string]: UserMetadata } = {}\n        for (let userMetadata of userMetadatas) {\n            returnValue[keyFunction(userMetadata)] = userMetadata\n        }\n        return returnValue\n    })\n}\n\nexport type CreateUserRequest = {\n    email: string\n    emailConfirmed?: boolean\n    sendEmailToConfirmEmailAddress?: boolean\n\n    password?: string\n    askUserToUpdatePasswordOnLogin?: boolean\n\n    username?: string\n    firstName?: string\n    lastName?: string\n    properties?: { [key: string]: any }\n}\n\nexport function createUser(\n    authUrl: URL,\n    integrationApiKey: string,\n    createUserRequest: CreateUserRequest\n): Promise<CreatedUser> {\n    const request = {\n        email: createUserRequest.email,\n        email_confirmed: createUserRequest.emailConfirmed,\n        send_email_to_confirm_email_address: createUserRequest.sendEmailToConfirmEmailAddress,\n\n        password: createUserRequest.password,\n        ask_user_to_update_password_on_login: createUserRequest.askUserToUpdatePasswordOnLogin,\n\n        username: createUserRequest.username,\n        first_name: createUserRequest.firstName,\n        last_name: createUserRequest.lastName,\n        properties: createUserRequest.properties,\n    }\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/`, \"POST\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new CreateUserException(httpResponse.response)\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when creating user\")\n            }\n\n            return parseSnakeCaseToCamelCase(httpResponse.response)\n        }\n    )\n}\n\nexport function disableUser(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}/disable`, \"POST\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when disabling user\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport function enableUser(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}/enable`, \"POST\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when enabling user\")\n        }\n\n        return true\n    })\n}\n\nexport function disableUser2fa(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}/disable_2fa`, \"POST\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when disabling 2FA\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport type InviteUserToOrgRequest = {\n    orgId: string\n    email: string\n    role: string\n}\n\nexport function inviteUserToOrg(\n    authUrl: URL,\n    integrationApiKey: string,\n    inviteUserToOrgRequest: InviteUserToOrgRequest\n): Promise<boolean> {\n    const body = {\n        org_id: inviteUserToOrgRequest.orgId,\n        email: inviteUserToOrgRequest.email,\n        role: inviteUserToOrgRequest.role,\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `/api/backend/v1/invite_user`, \"POST\", JSON.stringify(body)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new BadRequestException(httpResponse.response)\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when inviting a user to the org\")\n            }\n\n            return true\n        }\n    )\n}\n\n// PUT/PATCH\nexport type UpdateUserMetadataRequest = {\n    username?: string\n    firstName?: string\n    lastName?: string\n    pictureUrl?: string\n    metadata?: { [key: string]: any }\n    properties?: { [key: string]: any }\n    updatePasswordRequired?: boolean\n}\nexport function updateUserMetadata(\n    authUrl: URL,\n    integrationApiKey: string,\n    userId: string,\n    updateUserMetadataRequest: UpdateUserMetadataRequest\n): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    const request = {\n        username: updateUserMetadataRequest.username,\n        first_name: updateUserMetadataRequest.firstName,\n        last_name: updateUserMetadataRequest.lastName,\n        picture_url: updateUserMetadataRequest.pictureUrl,\n        metadata: updateUserMetadataRequest.metadata,\n        properties: updateUserMetadataRequest.properties,\n        update_password_required: updateUserMetadataRequest.updatePasswordRequired,\n    }\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}`, \"PUT\", JSON.stringify(request)).then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 400) {\n                throw new UpdateUserMetadataException(httpResponse.response)\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when updating user metadata\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport type UpdateUserEmailRequest = {\n    newEmail: string\n    requireEmailConfirmation: boolean\n}\n\nexport function updateUserEmail(\n    authUrl: URL,\n    integrationApiKey: string,\n    userId: string,\n    updateUserEmail: UpdateUserEmailRequest\n): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    const request = {\n        new_email: updateUserEmail.newEmail,\n        require_email_confirmation: updateUserEmail.requireEmailConfirmation,\n    }\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${userId}/email`,\n        \"PUT\",\n        JSON.stringify(request)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new UpdateUserEmailException(httpResponse.response)\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when creating user\")\n        }\n\n        return true\n    })\n}\n\nexport type UpdateUserPasswordRequest = {\n    password: string\n    askUserToUpdatePasswordOnLogin?: boolean\n}\n\nexport function updateUserPassword(\n    authUrl: URL,\n    integrationApiKey: string,\n    userId: string,\n    updateUserPasswordRequest: UpdateUserPasswordRequest\n): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    const request = {\n        password: updateUserPasswordRequest.password,\n        ask_user_to_update_password_on_login: updateUserPasswordRequest.askUserToUpdatePasswordOnLogin,\n    }\n    return httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${userId}/password`,\n        \"PUT\",\n        JSON.stringify(request)\n    ).then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 400) {\n            throw new UpdateUserPasswordException(httpResponse.response)\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when updating password\")\n        }\n\n        return true\n    })\n}\n\nexport function enableUserCanCreateOrgs(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}/can_create_orgs/enable`, \"PUT\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when enabling canCreateOrgs\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport function disableUserCanCreateOrgs(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}/can_create_orgs/disable`, \"PUT\").then(\n        (httpResponse) => {\n            if (httpResponse.statusCode === 401) {\n                throw new Error(\"integrationApiKey is incorrect\")\n            } else if (httpResponse.statusCode === 404) {\n                return false\n            } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n                throw new Error(\"Unknown error when disabling canCreateOrgs\")\n            }\n\n            return true\n        }\n    )\n}\n\nexport async function clearUserPassword(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    const httpResponse = await httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${userId}/clear_password`,\n        \"PUT\"\n    )\n    if (httpResponse.statusCode === 401) {\n        throw new Error(\"integrationApiKey is incorrect\")\n    } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n        throw new Error(\"Unknown error when clearing password\")\n    }\n    return true\n}\n\n// DELETE\nexport function deleteUser(authUrl: URL, integrationApiKey: string, userId: string): Promise<boolean> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(false)\n    }\n\n    return httpRequest(authUrl, integrationApiKey, `${ENDPOINT_PATH}/${userId}`, \"DELETE\").then((httpResponse) => {\n        if (httpResponse.statusCode === 401) {\n            throw new Error(\"integrationApiKey is incorrect\")\n        } else if (httpResponse.statusCode === 404) {\n            return false\n        } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n            throw new Error(\"Unknown error when deleting user\")\n        }\n\n        return true\n    })\n}\n\nexport type UserSignupQueryParams = {\n    userSignupQueryParameters: { [key: string]: string }\n}\n\nexport async function fetchUserSignupQueryParams(\n    authUrl: URL,\n    integrationApiKey: string,\n    userId: string\n): Promise<UserSignupQueryParams | null> {\n    if (!isValidId(userId)) {\n        return Promise.resolve(null)\n    }\n\n    const httpResponse = await httpRequest(\n        authUrl,\n        integrationApiKey,\n        `${ENDPOINT_PATH}/${userId}/signup_query_parameters`,\n        \"GET\"\n    )\n    if (httpResponse.statusCode === 401) {\n        throw new Error(\"integrationApiKey is incorrect\")\n    } else if (httpResponse.statusCode === 404) {\n        return null\n    } else if (httpResponse.statusCode && httpResponse.statusCode >= 400) {\n        throw new Error(\"Unknown error when fetching user signup query params\")\n    }\n\n    const snakeCase = JSON.parse(httpResponse.response)\n    return { userSignupQueryParameters: snakeCase[\"user_signup_query_parameters\"] }\n}\n","import { validateApiKey } from \"./api/endUserApiKeys\"\nimport { ApiKeyValidateException } from \"./exceptions\"\nimport { OrgApiKeyValidation, PersonalApiKeyValidation } from \"./user\"\n\nexport function validateAuthUrl(authUrl: string): URL {\n    try {\n        return new URL(authUrl)\n    } catch (e) {\n        console.error(\"Invalid authUrl\", e)\n        throw new Error(\"Unable to initialize auth client\")\n    }\n}\n\nexport async function validatePersonalApiKey(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyToken: string\n): Promise<PersonalApiKeyValidation> {\n    const apiKeyValidation = await validateApiKey(authUrl, integrationApiKey, apiKeyToken)\n    if (!apiKeyValidation.user || apiKeyValidation.org) {\n        throw new ApiKeyValidateException(JSON.stringify({ api_key_token: [\"Not a personal API Key\"] }))\n    }\n    return {\n        user: apiKeyValidation.user,\n        metadata: apiKeyValidation.metadata,\n    }\n}\n\nexport async function validateOrgApiKey(\n    authUrl: URL,\n    integrationApiKey: string,\n    apiKeyToken: string\n): Promise<OrgApiKeyValidation> {\n    const apiKeyValidation = await validateApiKey(authUrl, integrationApiKey, apiKeyToken)\n    if (!apiKeyValidation.org) {\n        throw new ApiKeyValidateException(JSON.stringify({ api_key_token: [\"Not an org API Key\"] }))\n    }\n    return {\n        org: apiKeyValidation.org,\n        metadata: apiKeyValidation.metadata,\n        user: apiKeyValidation.user,\n        userInOrg: apiKeyValidation.userInOrg,\n    }\n}\n","import * as jose from \"jose\"\nimport { AccessToken, createAccessToken, CreateAccessTokenRequest } from \"./api/accessToken\"\nimport {\n    ApiKeysCreateRequest,\n    ApiKeysQueryRequest,\n    ApiKeyUpdateRequest,\n    createApiKey,\n    deleteApiKey,\n    fetchApiKey,\n    fetchArchivedApiKeys,\n    fetchCurrentApiKeys,\n    updateApiKey,\n    validateApiKey,\n} from \"./api/endUserApiKeys\"\nimport { createMagicLink, CreateMagicLinkRequest, MagicLink } from \"./api/magicLink\"\nimport { migrateUserFromExternalSource, MigrateUserFromExternalSourceRequest } from \"./api/migrateUser\"\nimport {\n    addUserToOrg,\n    AddUserToOrgRequest,\n    allowOrgToSetupSamlConnection,\n    changeUserRoleInOrg,\n    ChangeUserRoleInOrgRequest,\n    createOrg,\n    CreateOrgRequest,\n    deleteOrg,\n    disallowOrgToSetupSamlConnection,\n    fetchOrg,\n    fetchOrgByQuery,\n    OrgQuery,\n    OrgQueryResponse,\n    removeUserFromOrg,\n    RemoveUserFromOrgRequest,\n    updateOrg,\n    UpdateOrgRequest,\n} from \"./api/org\"\nimport {\n    fetchTokenVerificationMetadata,\n    getTokenVerificationMetadataPromise,\n    TokenVerificationMetadata,\n    TokenVerificationMetadataWithPublicKey,\n} from \"./api/tokenVerificationMetadata\"\nimport {\n    clearUserPassword,\n    createUser,\n    CreateUserRequest,\n    deleteUser,\n    disableUser,\n    disableUser2fa,\n    disableUserCanCreateOrgs,\n    enableUser,\n    enableUserCanCreateOrgs,\n    fetchBatchUserMetadata,\n    fetchUserMetadataByQuery,\n    fetchUserMetadataByUserIdWithIdCheck,\n    fetchUsersByQuery,\n    fetchUserSignupQueryParams,\n    fetchUsersInOrg,\n    inviteUserToOrg,\n    InviteUserToOrgRequest,\n    updateUserEmail,\n    UpdateUserEmailRequest,\n    updateUserMetadata,\n    UpdateUserMetadataRequest,\n    updateUserPassword,\n    UpdateUserPasswordRequest,\n    UserSignupQueryParams,\n    UsersInOrgQuery,\n    UsersPagedResponse,\n    UsersQuery,\n} from \"./api/user\"\nimport { ForbiddenException, UnauthorizedException } from \"./exceptions\"\nimport {\n    ApiKeyFull,\n    ApiKeyNew,\n    ApiKeyResultPage,\n    ApiKeyValidation,\n    CreatedOrg,\n    CreatedUser,\n    InternalUser,\n    Org,\n    OrgApiKeyValidation,\n    OrgIdToOrgMemberInfo,\n    OrgMemberInfo,\n    PersonalApiKeyValidation,\n    toUser,\n    User,\n    UserAndOrgMemberInfo,\n    UserMetadata,\n} from \"./user\"\nimport { validateAuthUrl, validateOrgApiKey, validatePersonalApiKey } from \"./validators\"\n\nexport type BaseAuthOptions = {\n    authUrl: string\n    apiKey: string\n\n    /**\n     * By default, this library performs a one-time fetch on startup for\n     *   token verification metadata from your authUrl using your apiKey.\n     *\n     * This is usually preferred to make sure you have the most up to date information,\n     *   however, in environments like serverless, this one-time fetch becomes a\n     *   per-request fetch.\n     *\n     * In those environments, you can specify the token verification metadata manually,\n     *   which you can obtain from your PropelAuth project.\n     */\n    manualTokenVerificationMetadata?: TokenVerificationMetadata\n}\n\nexport function initBaseAuth(opts: BaseAuthOptions) {\n    const authUrl: URL = validateAuthUrl(opts.authUrl)\n    const integrationApiKey: string = opts.apiKey\n\n    // A promise that resolves to the token verification metadata, whether it's fetched or manually provided\n    const tokenVerificationMetadataPromise = fetchTokenVerificationMetadata(\n        authUrl,\n        integrationApiKey,\n        opts.manualTokenVerificationMetadata\n    ).catch((err) => {\n        console.error(\"Error initializing auth library. \", err)\n    })\n\n    // A promise that resolves to the token verification metadata with the public key imported\n    const tokenVerificationMetadataWithPublicKeyPromise = getTokenVerificationMetadataPromise(\n        tokenVerificationMetadataPromise\n    )\n\n    const validateAccessTokenAndGetUser = wrapValidateAccessTokenAndGetUser(\n        tokenVerificationMetadataWithPublicKeyPromise\n    )\n    const validateAccessTokenAndGetUserWithOrgInfo = wrapValidateAccessTokenAndGetUserWithOrgInfo(\n        tokenVerificationMetadataWithPublicKeyPromise\n    )\n    const validateAccessTokenAndGetUserWithOrgInfoWithMinimumRole =\n        wrapValidateAccessTokenAndGetUserWithOrgInfoWithMinimumRole(tokenVerificationMetadataWithPublicKeyPromise)\n    const validateAccessTokenAndGetUserWithOrgInfoWithExactRole =\n        wrapValidateAccessTokenAndGetUserWithOrgInfoWithExactRole(tokenVerificationMetadataWithPublicKeyPromise)\n    const validateAccessTokenAndGetUserWithOrgInfoWithPermission =\n        wrapValidateAccessTokenAndGetUserWithOrgInfoWithPermission(tokenVerificationMetadataWithPublicKeyPromise)\n    const validateAccessTokenAndGetUserWithOrgInfoWithAllPermissions =\n        wrapValidateAccessTokenAndGetUserWithOrgInfoWithAllPermissions(tokenVerificationMetadataWithPublicKeyPromise)\n\n    function fetchUserMetadataByUserId(userId: string, includeOrgs?: boolean): Promise<UserMetadata | null> {\n        return fetchUserMetadataByUserIdWithIdCheck(authUrl, integrationApiKey, userId, includeOrgs)\n    }\n\n    function fetchUserMetadataByEmail(email: string, includeOrgs?: boolean): Promise<UserMetadata | null> {\n        return fetchUserMetadataByQuery(authUrl, integrationApiKey, \"email\", {\n            email: email,\n            include_orgs: includeOrgs || false,\n        })\n    }\n\n    function fetchUserMetadataByUsername(username: string, includeOrgs?: boolean): Promise<UserMetadata | null> {\n        return fetchUserMetadataByQuery(authUrl, integrationApiKey, \"username\", {\n            username: username,\n            include_orgs: includeOrgs || false,\n        })\n    }\n\n    function fetchUserSignupQueryParamsWrapper(userId: string): Promise<UserSignupQueryParams | null> {\n        return fetchUserSignupQueryParams(authUrl, integrationApiKey, userId)\n    }\n\n    function fetchBatchUserMetadataByUserIds(\n        userIds: string[],\n        includeOrgs?: boolean\n    ): Promise<{ [userId: string]: UserMetadata }> {\n        return fetchBatchUserMetadata(\n            authUrl,\n            integrationApiKey,\n            \"user_ids\",\n            userIds,\n            (x) => x.userId,\n            includeOrgs || false\n        )\n    }\n\n    function fetchBatchUserMetadataByEmails(\n        emails: string[],\n        includeOrgs?: boolean\n    ): Promise<{ [email: string]: UserMetadata }> {\n        return fetchBatchUserMetadata(\n            authUrl,\n            integrationApiKey,\n            \"emails\",\n            emails,\n            (x) => x.email,\n            includeOrgs || false\n        )\n    }\n\n    function fetchBatchUserMetadataByUsernames(\n        usernames: string[],\n        includeOrgs?: boolean\n    ): Promise<{ [username: string]: UserMetadata }> {\n        return fetchBatchUserMetadata(\n            authUrl,\n            integrationApiKey,\n            \"usernames\",\n            usernames,\n            (x) => x.username || \"\",\n            includeOrgs || false\n        )\n    }\n\n    function fetchOrgWrapper(orgId: string): Promise<Org | null> {\n        return fetchOrg(authUrl, integrationApiKey, orgId)\n    }\n\n    function fetchOrgsByQueryWrapper(orgQuery: OrgQuery): Promise<OrgQueryResponse> {\n        return fetchOrgByQuery(authUrl, integrationApiKey, orgQuery)\n    }\n\n    function fetchUsersByQueryWrapper(usersQuery: UsersQuery): Promise<UsersPagedResponse> {\n        return fetchUsersByQuery(authUrl, integrationApiKey, usersQuery)\n    }\n\n    function fetchUsersInOrgWrapper(usersInOrgQuery: UsersInOrgQuery): Promise<UsersPagedResponse> {\n        return fetchUsersInOrg(authUrl, integrationApiKey, usersInOrgQuery)\n    }\n\n    function createUserWrapper(createUserRequest: CreateUserRequest): Promise<CreatedUser> {\n        return createUser(authUrl, integrationApiKey, createUserRequest)\n    }\n\n    function clearUserPasswordWrapper(userId: string): Promise<boolean> {\n        return clearUserPassword(authUrl, integrationApiKey, userId)\n    }\n\n    function updateUserMetadataWrapper(\n        userId: string,\n        updateUserMetadataRequest: UpdateUserMetadataRequest\n    ): Promise<boolean> {\n        return updateUserMetadata(authUrl, integrationApiKey, userId, updateUserMetadataRequest)\n    }\n\n    function deleteUserWrapper(userId: string): Promise<boolean> {\n        return deleteUser(authUrl, integrationApiKey, userId)\n    }\n\n    function disableUserWrapper(userId: string): Promise<boolean> {\n        return disableUser(authUrl, integrationApiKey, userId)\n    }\n\n    function enableUserWrapper(userId: string): Promise<boolean> {\n        return enableUser(authUrl, integrationApiKey, userId)\n    }\n\n    function disableUser2faWrapper(userId: string): Promise<boolean> {\n        return disableUser2fa(authUrl, integrationApiKey, userId)\n    }\n\n    function updateUserEmailWrapper(userId: string, updateUserEmailRequest: UpdateUserEmailRequest): Promise<boolean> {\n        return updateUserEmail(authUrl, integrationApiKey, userId, updateUserEmailRequest)\n    }\n\n    function updateUserPasswordWrapper(\n        userId: string,\n        updateUserPasswordRequest: UpdateUserPasswordRequest\n    ): Promise<boolean> {\n        return updateUserPassword(authUrl, integrationApiKey, userId, updateUserPasswordRequest)\n    }\n\n    function enableUserCanCreateOrgsWrapper(userId: string): Promise<boolean> {\n        return enableUserCanCreateOrgs(authUrl, integrationApiKey, userId)\n    }\n\n    function disableUserCanCreateOrgsWrapper(userId: string): Promise<boolean> {\n        return disableUserCanCreateOrgs(authUrl, integrationApiKey, userId)\n    }\n\n    function createMagicLinkWrapper(createMagicLinkRequest: CreateMagicLinkRequest): Promise<MagicLink> {\n        return createMagicLink(authUrl, integrationApiKey, createMagicLinkRequest)\n    }\n\n    function createAccessTokenWrapper(createAccessTokenRequest: CreateAccessTokenRequest): Promise<AccessToken> {\n        return createAccessToken(authUrl, integrationApiKey, createAccessTokenRequest)\n    }\n\n    function migrateUserFromExternalSourceWrapper(\n        migrateUserFromExternalSourceRequest: MigrateUserFromExternalSourceRequest\n    ): Promise<User> {\n        return migrateUserFromExternalSource(authUrl, integrationApiKey, migrateUserFromExternalSourceRequest)\n    }\n\n    function createOrgWrapper(createOrgRequest: CreateOrgRequest): Promise<CreatedOrg> {\n        return createOrg(authUrl, integrationApiKey, createOrgRequest)\n    }\n\n    function addUserToOrgWrapper(addUserToOrgRequest: AddUserToOrgRequest): Promise<boolean> {\n        return addUserToOrg(authUrl, integrationApiKey, addUserToOrgRequest)\n    }\n\n    function changeUserRoleInOrgWrapper(changeUserRoleInOrgRequest: ChangeUserRoleInOrgRequest): Promise<boolean> {\n        return changeUserRoleInOrg(authUrl, integrationApiKey, changeUserRoleInOrgRequest)\n    }\n\n    function removeUserFromOrgWrapper(removeUserFromOrgRequest: RemoveUserFromOrgRequest): Promise<boolean> {\n        return removeUserFromOrg(authUrl, integrationApiKey, removeUserFromOrgRequest)\n    }\n\n    function updateOrgWrapper(updateOrgRequest: UpdateOrgRequest): Promise<boolean> {\n        return updateOrg(authUrl, integrationApiKey, updateOrgRequest)\n    }\n\n    function deleteOrgWrapper(orgId: string): Promise<boolean> {\n        return deleteOrg(authUrl, integrationApiKey, orgId)\n    }\n\n    function allowOrgToSetupSamlConnectionWrapper(orgId: string): Promise<boolean> {\n        return allowOrgToSetupSamlConnection(authUrl, integrationApiKey, orgId)\n    }\n\n    function disallowOrgToSetupSamlConnectionWrapper(orgId: string): Promise<boolean> {\n        return disallowOrgToSetupSamlConnection(authUrl, integrationApiKey, orgId)\n    }\n\n    function inviteUserToOrgWrapper(inviteUserToOrgRequest: InviteUserToOrgRequest): Promise<boolean> {\n        return inviteUserToOrg(authUrl, integrationApiKey, inviteUserToOrgRequest)\n    }\n\n    // end user api key wrappers\n    function fetchApiKeyWrapper(apiKeyId: string): Promise<ApiKeyFull> {\n        return fetchApiKey(authUrl, integrationApiKey, apiKeyId)\n    }\n\n    function fetchCurrentApiKeysWrapper(apiKeyQuery: ApiKeysQueryRequest): Promise<ApiKeyResultPage> {\n        return fetchCurrentApiKeys(authUrl, integrationApiKey, apiKeyQuery)\n    }\n\n    function fetchArchivedApiKeysWrapper(apiKeyQuery: ApiKeysQueryRequest): Promise<ApiKeyResultPage> {\n        return fetchArchivedApiKeys(authUrl, integrationApiKey, apiKeyQuery)\n    }\n\n    function createApiKeyWrapper(apiKeyCreate: ApiKeysCreateRequest): Promise<ApiKeyNew> {\n        return createApiKey(authUrl, integrationApiKey, apiKeyCreate)\n    }\n\n    function updateApiKeyWrapper(apiKeyId: string, ApiKeyUpdate: ApiKeyUpdateRequest): Promise<boolean> {\n        return updateApiKey(authUrl, integrationApiKey, apiKeyId, ApiKeyUpdate)\n    }\n\n    function deleteApiKeyWrapper(apiKeyId: string): Promise<boolean> {\n        return deleteApiKey(authUrl, integrationApiKey, apiKeyId)\n    }\n\n    function validatePersonalApiKeyWrapper(apiKeyToken: string): Promise<PersonalApiKeyValidation> {\n        return validatePersonalApiKey(authUrl, integrationApiKey, apiKeyToken)\n    }\n\n    function validateOrgApiKeyWrapper(apiKeyToken: string): Promise<OrgApiKeyValidation> {\n        return validateOrgApiKey(authUrl, integrationApiKey, apiKeyToken)\n    }\n\n    function validateApiKeyWrapper(apiKeyToken: string): Promise<ApiKeyValidation> {\n        return validateApiKey(authUrl, integrationApiKey, apiKeyToken)\n    }\n\n    return {\n        // validate and fetching functions\n        validateAccessTokenAndGetUser,\n        validateAccessTokenAndGetUserWithOrgInfo,\n        validateAccessTokenAndGetUserWithOrgInfoWithMinimumRole,\n        validateAccessTokenAndGetUserWithOrgInfoWithExactRole,\n        validateAccessTokenAndGetUserWithOrgInfoWithPermission,\n        validateAccessTokenAndGetUserWithOrgInfoWithAllPermissions,\n        // fetching functions\n        fetchUserMetadataByUserId,\n        fetchUserMetadataByEmail,\n        fetchUserMetadataByUsername,\n        fetchUserSignupQueryParams: fetchUserSignupQueryParamsWrapper,\n        fetchBatchUserMetadataByUserIds,\n        fetchBatchUserMetadataByEmails,\n        fetchBatchUserMetadataByUsernames,\n        fetchOrg: fetchOrgWrapper,\n        fetchOrgByQuery: fetchOrgsByQueryWrapper,\n        fetchUsersByQuery: fetchUsersByQueryWrapper,\n        fetchUsersInOrg: fetchUsersInOrgWrapper,\n        // user management functions\n        createUser: createUserWrapper,\n        clearUserPassword: clearUserPasswordWrapper,\n        updateUserMetadata: updateUserMetadataWrapper,\n        updateUserEmail: updateUserEmailWrapper,\n        updateUserPassword: updateUserPasswordWrapper,\n        createMagicLink: createMagicLinkWrapper,\n        createAccessToken: createAccessTokenWrapper,\n        migrateUserFromExternalSource: migrateUserFromExternalSourceWrapper,\n        deleteUser: deleteUserWrapper,\n        disableUser: disableUserWrapper,\n        enableUser: enableUserWrapper,\n        disableUser2fa: disableUser2faWrapper,\n        enableUserCanCreateOrgs: enableUserCanCreateOrgsWrapper,\n        disableUserCanCreateOrgs: disableUserCanCreateOrgsWrapper,\n        // org management functions\n        createOrg: createOrgWrapper,\n        addUserToOrg: addUserToOrgWrapper,\n        changeUserRoleInOrg: changeUserRoleInOrgWrapper,\n        removeUserFromOrg: removeUserFromOrgWrapper,\n        updateOrg: updateOrgWrapper,\n        deleteOrg: deleteOrgWrapper,\n        allowOrgToSetupSamlConnection: allowOrgToSetupSamlConnectionWrapper,\n        disallowOrgToSetupSamlConnection: disallowOrgToSetupSamlConnectionWrapper,\n        inviteUserToOrg: inviteUserToOrgWrapper,\n        // api keys functions\n        fetchApiKey: fetchApiKeyWrapper,\n        fetchCurrentApiKeys: fetchCurrentApiKeysWrapper,\n        fetchArchivedApiKeys: fetchArchivedApiKeysWrapper,\n        createApiKey: createApiKeyWrapper,\n        updateApiKey: updateApiKeyWrapper,\n        deleteApiKey: deleteApiKeyWrapper,\n        validateApiKey: validateApiKeyWrapper,\n        validatePersonalApiKey: validatePersonalApiKeyWrapper,\n        validateOrgApiKey: validateOrgApiKeyWrapper,\n    }\n}\n\n// wrapper function with no validation\nfunction wrapValidateAccessTokenAndGetUser(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>\n) {\n    return async function validateAccessTokenAndGetUser(authorizationHeader?: string): Promise<User> {\n        return extractAndVerifyBearerToken(tokenVerificationMetadataWithPublicKeyPromise, authorizationHeader)\n    }\n}\n\n// The following four functions are wrappers around our four validations: isRole, atLeastRole, hasPermission, hasAllPermissions\n// Each function returns an OrgMemberInfo object\n\nfunction wrapValidateAccessTokenAndGetUserWithOrgInfo(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>\n) {\n    return async function validateAccessTokenAndGetUserWithOrgInfo(\n        authorizationHeader: string | undefined,\n        requiredOrgInfo: RequiredOrgInfo\n    ): Promise<UserAndOrgMemberInfo> {\n        const user = await extractAndVerifyBearerToken(\n            tokenVerificationMetadataWithPublicKeyPromise,\n            authorizationHeader\n        )\n        const orgMemberInfo = validateOrgAccessAndGetOrgMemberInfo(user, requiredOrgInfo)\n        return { user, orgMemberInfo }\n    }\n}\n\nfunction wrapValidateAccessTokenAndGetUserWithOrgInfoWithMinimumRole(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>\n) {\n    return async function validateAccessTokenAndGetUserWithOrgInfo(\n        authorizationHeader: string | undefined,\n        requiredOrgInfo: RequiredOrgInfo,\n        minimumRole: string\n    ): Promise<UserAndOrgMemberInfo> {\n        const user = await extractAndVerifyBearerToken(\n            tokenVerificationMetadataWithPublicKeyPromise,\n            authorizationHeader\n        )\n        const orgMemberInfo = validateOrgAccessAndGetOrgMemberInfoWithMinimumRole(user, requiredOrgInfo, minimumRole)\n        return { user, orgMemberInfo }\n    }\n}\n\nfunction wrapValidateAccessTokenAndGetUserWithOrgInfoWithExactRole(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>\n) {\n    return async function validateAccessTokenAndGetUserWithOrgInfo(\n        authorizationHeader: string | undefined,\n        requiredOrgInfo: RequiredOrgInfo,\n        exactRole: string\n    ): Promise<UserAndOrgMemberInfo> {\n        const user = await extractAndVerifyBearerToken(\n            tokenVerificationMetadataWithPublicKeyPromise,\n            authorizationHeader\n        )\n        const orgMemberInfo = validateOrgAccessAndGetOrgMemberInfoWithExactRole(user, requiredOrgInfo, exactRole)\n        return { user, orgMemberInfo }\n    }\n}\n\nfunction wrapValidateAccessTokenAndGetUserWithOrgInfoWithPermission(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>\n) {\n    return async function validateAccessTokenAndGetUserWithOrgInfo(\n        authorizationHeader: string | undefined,\n        requiredOrgInfo: RequiredOrgInfo,\n        permission: string\n    ): Promise<UserAndOrgMemberInfo> {\n        const user = await extractAndVerifyBearerToken(\n            tokenVerificationMetadataWithPublicKeyPromise,\n            authorizationHeader\n        )\n        const orgMemberInfo = validateOrgAccessAndGetOrgMemberInfoWithPermission(user, requiredOrgInfo, permission)\n        return { user, orgMemberInfo }\n    }\n}\n\nfunction wrapValidateAccessTokenAndGetUserWithOrgInfoWithAllPermissions(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>\n) {\n    return async function validateAccessTokenAndGetUserWithOrgInfo(\n        authorizationHeader: string | undefined,\n        requiredOrgInfo: RequiredOrgInfo,\n        permissions: string[]\n    ): Promise<UserAndOrgMemberInfo> {\n        const user = await extractAndVerifyBearerToken(\n            tokenVerificationMetadataWithPublicKeyPromise,\n            authorizationHeader\n        )\n        const orgMemberInfo = validateOrgAccessAndGetOrgMemberInfoWithAllPermissions(user, requiredOrgInfo, permissions)\n        return { user, orgMemberInfo }\n    }\n}\n\nexport type RequiredOrgInfo = {\n    orgId?: string\n    orgName?: string\n}\n\n// Validator functions\n\nfunction validateOrgAccessAndGetOrgMemberInfo(user: User, requiredOrgInfo: RequiredOrgInfo): OrgMemberInfo {\n    const orgMemberInfo = getUserInfoInOrg(requiredOrgInfo, user.orgIdToOrgMemberInfo)\n    if (!orgMemberInfo) {\n        throw new ForbiddenException(`User is not a member of org ${JSON.stringify(requiredOrgInfo)}`)\n    }\n\n    return orgMemberInfo\n}\n\nfunction validateOrgAccessAndGetOrgMemberInfoWithMinimumRole(\n    user: User,\n    requiredOrgInfo: RequiredOrgInfo,\n    minimumRole: string\n): OrgMemberInfo {\n    const orgMemberInfo = getUserInfoInOrg(requiredOrgInfo, user.orgIdToOrgMemberInfo)\n    if (!orgMemberInfo) {\n        throw new ForbiddenException(`User is not a member of org ${JSON.stringify(requiredOrgInfo)}`)\n    }\n\n    if (!orgMemberInfo.isAtLeastRole(minimumRole)) {\n        throw new ForbiddenException(`User's roles don't contain the minimum role (${minimumRole})`)\n    }\n\n    return orgMemberInfo\n}\n\nfunction validateOrgAccessAndGetOrgMemberInfoWithExactRole(\n    user: User,\n    requiredOrgInfo: RequiredOrgInfo,\n    exactRole: string\n): OrgMemberInfo {\n    const orgMemberInfo = getUserInfoInOrg(requiredOrgInfo, user.orgIdToOrgMemberInfo)\n    if (!orgMemberInfo) {\n        throw new ForbiddenException(`User is not a member of org ${JSON.stringify(requiredOrgInfo)}`)\n    }\n\n    if (!orgMemberInfo.isRole(exactRole)) {\n        throw new ForbiddenException(`User's assigned role isn't the required role (${exactRole})`)\n    }\n\n    return orgMemberInfo\n}\n\nfunction validateOrgAccessAndGetOrgMemberInfoWithPermission(\n    user: User,\n    requiredOrgInfo: RequiredOrgInfo,\n    permission: string\n): OrgMemberInfo {\n    const orgMemberInfo = getUserInfoInOrg(requiredOrgInfo, user.orgIdToOrgMemberInfo)\n    if (!orgMemberInfo) {\n        throw new ForbiddenException(`User is not a member of org ${JSON.stringify(requiredOrgInfo)}`)\n    }\n\n    if (!orgMemberInfo.hasPermission(permission)) {\n        throw new ForbiddenException(`User's permissions don't contain the required permission (${permission})`)\n    }\n\n    return orgMemberInfo\n}\n\nfunction validateOrgAccessAndGetOrgMemberInfoWithAllPermissions(\n    user: User,\n    requiredOrgInfo: RequiredOrgInfo,\n    permissions: string[]\n): OrgMemberInfo {\n    const orgMemberInfo = getUserInfoInOrg(requiredOrgInfo, user.orgIdToOrgMemberInfo)\n    if (!orgMemberInfo) {\n        throw new ForbiddenException(`User is not a member of org ${JSON.stringify(requiredOrgInfo)}`)\n    }\n\n    if (!orgMemberInfo.hasAllPermissions(permissions)) {\n        throw new ForbiddenException(`User's permissions don't contain all the required permissions (${permissions})`)\n    }\n\n    return orgMemberInfo\n}\n\n// Miscellaneous functions\n\nfunction getUserInfoInOrg(\n    requiredOrgInfo: RequiredOrgInfo,\n    orgIdToOrgMemberInfo?: OrgIdToOrgMemberInfo\n): OrgMemberInfo | undefined {\n    if (!orgIdToOrgMemberInfo) {\n        return undefined\n    } else if (requiredOrgInfo.orgId) {\n        // If we are looking for an orgId, we can do a direct lookup\n        if (!orgIdToOrgMemberInfo.hasOwnProperty(requiredOrgInfo.orgId)) {\n            return undefined\n        }\n        const orgMemberInfo = orgIdToOrgMemberInfo[requiredOrgInfo.orgId]\n\n        // We also need to verify the orgName matches, if specified\n        if (requiredOrgInfo.orgName && orgNameMatches(requiredOrgInfo.orgName, orgMemberInfo)) {\n            return orgMemberInfo\n        } else if (requiredOrgInfo.orgName) {\n            return undefined\n        } else {\n            return orgMemberInfo\n        }\n    } else if (requiredOrgInfo.orgName) {\n        // We know there's no required orgId so just iterate over orgMemberInfos looking for a matching urlSafeOrgName\n        for (const orgMemberInfo of Object.values(orgIdToOrgMemberInfo)) {\n            if (orgNameMatches(requiredOrgInfo.orgName, orgMemberInfo)) {\n                return orgMemberInfo\n            }\n        }\n        return undefined\n    } else {\n        return undefined\n    }\n}\n\nfunction orgNameMatches(orgName: string, orgMemberInfo: OrgMemberInfo) {\n    return orgName === orgMemberInfo.orgName || orgName === orgMemberInfo.urlSafeOrgName\n}\n\nasync function extractAndVerifyBearerToken(\n    tokenVerificationMetadataWithPublicKeyPromise: Promise<TokenVerificationMetadataWithPublicKey>,\n    authorizationHeader: string | undefined\n) {\n    const tokenVerificationMetadataWithPublicKey = await tokenVerificationMetadataWithPublicKeyPromise\n\n    const { publicKey, tokenVerificationMetadata } = tokenVerificationMetadataWithPublicKey\n\n    const bearerToken = extractBearerToken(authorizationHeader)\n    return verifyToken(bearerToken, tokenVerificationMetadata, publicKey)\n}\n\nfunction extractBearerToken(authHeader?: string): string {\n    if (!authHeader) {\n        throw new UnauthorizedException(\"No authorization header found.\")\n    }\n\n    const authHeaderParts = authHeader.split(\" \")\n    if (authHeaderParts.length !== 2 || authHeaderParts[0].toLowerCase() !== \"bearer\") {\n        throw new UnauthorizedException(\"Invalid authorization header. Expected: Bearer {accessToken}\")\n    }\n\n    return authHeaderParts[1]\n}\n\nasync function verifyToken(\n    bearerToken: string,\n    tokenVerificationMetadata: TokenVerificationMetadata,\n    publicKey: jose.KeyLike\n): Promise<User> {\n    try {\n        const { payload } = await jose.jwtVerify(bearerToken, publicKey, {\n            algorithms: [\"RS256\"],\n            issuer: tokenVerificationMetadata.issuer,\n        })\n        return toUser(<InternalUser>payload)\n    } catch (e: unknown) {\n        if (e instanceof Error) {\n            throw new UnauthorizedException(e.message)\n        } else {\n            throw new UnauthorizedException(\"Unable to decode jwt\")\n        }\n    }\n}\n\nexport type HandleErrorOptions = {\n    logError?: boolean\n    returnDetailedErrorToUser?: boolean\n}\n\nexport type HandleErrorResponse = {\n    status: number\n    message: string\n}\n\nexport function handleError(e: unknown, opts?: HandleErrorOptions): HandleErrorResponse {\n    if (opts && opts.logError) {\n        console.error(e)\n    }\n\n    const detailedError = opts && opts.returnDetailedErrorToUser\n    if (e instanceof UnauthorizedException) {\n        return {\n            status: 401,\n            message: detailedError ? e.message : \"Unauthorized\",\n        }\n    } else if (e instanceof ForbiddenException) {\n        return {\n            status: 403,\n            message: detailedError ? e.message : \"Forbidden\",\n        }\n    } else {\n        return {\n            status: 401,\n            message: \"Unauthorized\",\n        }\n    }\n}\n"],"names":["Buffer","getNamedCurve","invalidKeyInput","getSignKey","nodeDigest","nodeKey","getVerifyKey","base64url","ENDPOINT_PATH","jose.importSPKI","jose.jwtVerify"],"mappings":"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"}